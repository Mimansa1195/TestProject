var gemOrgStrW; if (gemOrgStr = function (t, e) { this.config = { theme: "ula", color: "blue", enableEdit: !0, enableZoom: !0, enableSearch: !0, enableMove: !0, enableGridView: !1, enableDetailsView: !0, enablePrint: !1, orgDblClick: !0, scale: "auto", linkType: "M", orientation: gemOrgStr.C_TOP, primaryFields: ["Name", "Title"], photoFields: ["Image"], idField: null, parentIdField: null, secondParentIdField: null, levelSeparation: 100, siblingSeparation: 30, subtreeSeparation: 40, removeNodeEvent: "", updateNodeEvent: "", updatedEvent: "", insertNodeEvent: "", createNodeEvent: "", clickNodeEvent: "", orgRender: "", embdDef: "", maxDepth: 30, dataSource: null, customize: [], expandToLevel: 3, orgSizePercent: { minBoxSize: { width: 5, height: 5 }, boxSize: { width: null, height: null }, maxBoxSize: { width: 100, height: 100 } }, layout: null }; var i = gemOrgStr.util._4("colorScheme"); if (i && (this.config.color = i), e) for (var r in this.config) void 0 !== e[r] && (this.config[r] = e[r]); this._d(), this.version = "1.0.0", this.theme = gemOrgStr.themes[this.config.theme], this.element = t, this.nodes = {}, this._ak = [], this._ao = [], this._zz = [], this._zv = 0, this._zf = 0, this._aN = null, this._au = [], this._zr = new gemOrgStr.node(-1, null, null, null, 2, 2), this._zu = { found: [], showIndex: 0, oldValue: "", timer: "" }, this._aO = {}, this._aV = null, this._a2 = null, this._zX = null, this.scale = null, this.maxScale = null, this.maxScale = null, this._S = !1, this.theme.defs && (this.config.embdDef += this.theme.defs); for (id in this.config.customize) this.config.customize[id].theme && (this.config.embdDef += gemOrgStr.themes[this.config.customize[id].theme].defs); this._X = new gemOrgStr._X(this.element), this._ax(), this.load() }, gemOrgStr.prototype._ax = function () { this._f(); var t = gemOrgStr.INNER_HTML.replace("[theme]", this.config.theme).replace("[color]", this.config.color).replace(/\[height]/g, this._aL).replace(/\[toolbar-height]/g, this.theme.toolbarHeight); void 0 !== gemOrgStrW && (t = t.slice(0, -6), t += gemOrgStrW), this.element.innerHTML = t }, gemOrgStr.prototype.resize = function () { this._f(), this._X._t.style.height = this._aL + "px", this._X._u.style.height = this._aL + "px", this._X._7.style.height = this._aL + "px" }, gemOrgStr.prototype._f = function () { this._zH = get._c().msie ? this.element.clientWidth : window.getComputedStyle(this.element, null).width, this._zH = parseInt(this._zH), this._zH < 3 && (this._zH = 1024, this.element.style.width = "1024px"), this._zY = get._c().msie ? this.element.clientHeight : window.getComputedStyle(this.element, null).height, this._zY = parseInt(this._zY), this._zY < 3 && (this._zY = parseInt(9 * this._zH / 16), this.element.style.height = this._zY + "px"), this._aP = this._zH, this._aL = this._zY - this.theme.toolbarHeight }, gemOrgStr.prototype.changeColorScheme = function (t) { this.config.color != t && (this._X._zB.className = this._X._zB.className.replace(this.config.color, t), this.config.color = t) }, gemOrgStr.prototype._a5 = function () { this._ak = [], this._ao = [], this._zz = [], gemOrgStr._F(this, this._zr, 0), gemOrgStr._zk(this, this._zr, 0, 0, 0), gemOrgStr._zD(this) }, gemOrgStr.prototype._zp = function (t, e) { null == this._ak[e] && (this._ak[e] = 0), this._ak[e] < t.h && (this._ak[e] = t.h) }, gemOrgStr.prototype._zQ = function (t, e) { null == this._ao[e] && (this._ao[e] = 0), this._ao[e] < t.w && (this._ao[e] = t.w) }, gemOrgStr.prototype._zA = function (t, e) { t.leftNeighbor = this._zz[e], null != t.leftNeighbor && (t.leftNeighbor.rightNeighbor = t), this._zz[e] = t }, gemOrgStr.prototype._P = function (t) { switch (this.config.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: return t.w; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: return t.h } return 0 }, gemOrgStr.prototype._O = function (t, e, i) { if (e >= i) return t; if (0 == t._Y()) return null; for (var r = t._Y(), s = 0; r > s; s++) { var a = t._G(s), n = this._O(a, e + 1, i); if (null != n) return n } return null }, gemOrgStr.prototype._A = function () { var t, e = []; t = this._X._v ? gemOrgStr.util._5(this._X) : this._6(), e.push(gemOrgStr.OPEN_SVG.replace("[defs]", this.config.embdDef).replace("[viewBox]", t.toString())); for (var i in this.nodes) { var r = this.nodes[i]; if (!this.isCollapsed(r)) { var s = r.draw(this.config); this._R("orgRender", { node: r, content: s }), e.push(s.join("")); var a = r._Z(this.config); e.push(a) } } if (null != this.config.secondParentIdField) for (var i in this.nodes) { var n = this.nodes[i]._W(this.config); e.push(n) } return e.push(gemOrgStr.buttons.draw()), e.push(gemOrgStr.CLOSE_SVG), e.join("") }, gemOrgStr.prototype._r = function (t, e, i, r, s, a) { var n = t, o = null; e && (o = e * (this._aP / 100 / (r.w + s))); var h = null; return i && (h = i * (this._aL / 100 / (r.h + a))), null != o && null != h ? n = o > h ? h : o : null != o ? n = o : null != h && (n = h), n }, gemOrgStr.prototype._6 = function () { var t, e, i = this.config.siblingSeparation / 2, r = this.config.levelSeparation / 2, s = 0, a = 0, n = this.nodes[Object.keys(this.nodes)[0]], o = 0, h = 0, l = 0, g = 0; for (var d in this.nodes) { var _ = this.nodes[d]; _.x > o && (o = _.x), _.y > h && (h = _.y), _.x < l && (l = _.x), _.y < g && (g = _.y) } if (null != this.config.orgSizePercent) { var c = this.config.siblingSeparation, m = this.config.levelSeparation; switch (this.config.orientation) { case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: var c = this.config.levelSeparation, m = this.config.siblingSeparation } this.scale = this._r(this.config.scale, this.config.orgSizePercent.boxSize.width, this.config.orgSizePercent.boxSize.height, n, c, m), this.minScale = this._r(0, this.config.orgSizePercent.minBoxSize.width, this.config.orgSizePercent.minBoxSize.height, n, c, m), this.maxScale = this._r(1e7, this.config.orgSizePercent.maxBoxSize.width, this.config.orgSizePercent.maxBoxSize.height, n, c, m) } switch (this.config.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: t = Math.abs(l) + Math.abs(o) + this.theme.size[0], e = Math.abs(g) + Math.abs(h) + this.theme.size[1]; var p = this._aP / this._aL, u = t / e; "auto" === this.scale ? u > p ? (e = t / p, a = -e / 2 + (h - g) / 2 + this.theme.size[1] / 2) : (t = e * p, s = -t / 2 + (o - l) / 2 + this.theme.size[0] / 2) : (t = this._aP / this.scale, e = this._aL / this.scale, this.config.orientation == gemOrgStr.C_TOP && (s = n.x - t / 2 + n.w / 2)), this.initialViewBoxMatrix = [-i + s, r + a, t + this.config.siblingSeparation, e]; break; case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: t = Math.abs(l) + Math.abs(o) + this.theme.size[0], e = Math.abs(g) + Math.abs(h); var p = this._aP / this._aL, u = t / e; "auto" === this.scale ? u > p ? (e = t / p, a = -e / 2 + (h - g) / 2) : (t = e * p, s = -t / 2 + (o - l) / 2 + this.theme.size[0] / 2) : (t = this._aP / this.scale, e = this._aL / this.scale, this.config.orientation == gemOrgStr.C_BOTTOM && (s = n.x - t / 2 + n.w / 2)), this.initialViewBoxMatrix = [-i + s, -r - e - a, t + this.config.siblingSeparation, e]; break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: t = Math.abs(l) + Math.abs(o), e = Math.abs(g) + Math.abs(h) + this.theme.size[1]; var p = this._aP / this._aL, u = t / e; "auto" === this.scale ? u > p ? (e = t / p, a = -e / 2 + (h - g) / 2 + this.theme.size[1] / 2) : (t = e * p, s = -t / 2 + (o - l) / 2) : (t = this._aP / this.scale, e = this._aL / this.scale, this.orientation == gemOrgStr.C_RIGHT && (a = n.y - e / 2 + n.h / 2)), this.initialViewBoxMatrix = [-t - r - s, -i + a, t, e + this.config.siblingSeparation]; break; case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: t = Math.abs(l) + Math.abs(o) + this.theme.size[0], e = Math.abs(g) + Math.abs(h) + this.theme.size[1]; var p = this._aP / this._aL, u = t / e; "auto" === this.scale ? u > p ? (e = t / p, a = -e / 2 + (h - g) / 2 + this.theme.size[1] / 2) : (t = e * p, s = -t / 2 + (o - l) / 2 + this.theme.size[0] / 2) : (t = this._aP / this.scale, e = this._aL / this.scale, this.config.orientation == gemOrgStr.C_LEFT && (a = n.y - e / 2 + n.h / 2)), this.initialViewBoxMatrix = [r + s, -i + a, t, e + this.config.siblingSeparation] } return this.initialViewBoxMatrix.toString() }, gemOrgStr.prototype.draw = function (t) { return this._X._a8(), this._a5(), this._X._t.innerHTML = this._A(), this._X._a7(), this.config.enableSearch && (this._X._zj.style.display = "inherit", this._X._aE.style.display = "inherit", this._X._zq.style.display = "inherit"), this.config.enableZoom && (this._X._zO.style.display = "inherit", this._X._zI.style.display = "inherit"), this.config.enableGridView && (this._X._8.style.display = "inherit"), this.config.enablePrint && (this._X._zw.style.display = "inherit"), this.config.enableMove && (this._X._zc.style.display = "inherit", this._X._aj.style.display = "inherit", this._X._Q.style.display = "inherit", this._X._zG.style.display = "inherit"), this._e(), this._X._zT(), this._z(t), this.showMainView(), this }, gemOrgStr.prototype._z = function (t) { var e = []; for (var i in this.nodes) null == this.nodes[i]._zU || null == this.nodes[i]._zJ || this.nodes[i]._zU == this.nodes[i].x && this.nodes[i]._zJ == this.nodes[i].y || (a = this._X.getNodeById(i)) && e.push(this.nodes[i]); for (var r = 0; r < e.length; r++) { var s = e[r], a = this._X.getNodeById(s.id), n = gemOrgStr.util._3(a), o = n.slice(0); o[4] = s.x, o[5] = s.y, get._z(a, { transform: n }, { transform: o }, 200, get._z._aU, function (i) { t && e[e.length - 1].id == i[0].getAttribute("data-node-id") && t() }) } t && 0 == e.length && t() }, gemOrgStr.prototype._aW = function (t, e) { this._q(t, "mouseup", this._aS), this._q(t, "mouseleave", this._aS); var i = this, r = 100; t.interval = setInterval(function () { switch (t) { case i._X._zc: i.move("right", r); break; case i._X._aj: i.move("left", r); break; case i._X._Q: i.move("up", r); break; case i._X._zG: i.move("down", r) } r > 10 && r-- }, 20) }, gemOrgStr.prototype._aS = function (t, e) { this._ze(t, "mouseup", this._aS), this._ze(t, "mouseleave", this._aS), clearInterval(t.interval) }, gemOrgStr.prototype.move = function (t, e, i) { var r = gemOrgStr.util._5(this._X), s = r.slice(0), a = this.theme.size[0] / e, n = this.theme.size[1] / e, o = !1; switch (t) { case "left": s[0] -= a; break; case "down": s[1] -= n; break; case "right": s[0] += a; break; case "up": s[1] += n; break; default: s[0] = t[0], s[1] = t[1], s[2] = t[2], s[3] = t[3], o = !0 } return o ? get._z(this._X._v, { viewBox: r }, { viewBox: s }, 300, get._z._af, function () { i && i() }) : this._X._v.setAttribute("viewBox", s), this }, gemOrgStr.prototype.isCollapsed = function (t) { return t.parent != this._zr && null != t.parent && (t.parent.collapsed != gemOrgStr.EXPANDED || this.isCollapsed(t.parent)) }, gemOrgStr.prototype._e = function () { this.config.enableGridView && (this._q(this._X._8, "click", this._zZ), this._q(this._X._9, "click", this._zW)), this.config.enablePrint && this._q(this._X._zw, "click", this._zs), this.config.enableMove && ("ontouchstart" in window ? (this._q(this._X._t, "touchstart", this._y, "canvasContainer"), this._q(this._X._t, "touchmove", this._b, "canvasContainer"), this._q(this._X._t, "touchend", this._g, "canvasContainer")) : (this._q(this._X._zc, "mousedown", this._aW), this._q(this._X._aj, "mousedown", this._aW), this._q(this._X._Q, "mousedown", this._aW), this._q(this._X._zG, "mousedown", this._aW), this._q(this._X._t, "mousemove", this._aQ), this._q(this._X._t, "mousedown", this._ap), this._q(this._X._t, "mouseup", this._aA), this._q(this._X._t, "mouseleave", this._aA))), this._q(window, "keydown", this._ah); for (i = 0; i < this._X._aC.length; i++) "ontouchstart" in window && "onorientationchange" in window ? this._q(this._X._aC[i], "touchstart", this._aR) : this._q(this._X._aC[i], "click", this._aR); for (i = 0; i < this._X._aG.length; i++) "ontouchstart" in window && "onorientationchange" in window ? (this._q(this._X._aG[i], "touchstart", this._aH), this._q(this._X._aG[i], "touchmove", this._aY), this._q(this._X._aG[i], "touchend", this._aB)) : (this._q(this._X._aG[i], "mousedown", this._aH), this._q(this._X._aG[i], "click", this._aF), this._q(this._X._aG[i], "mouseover", this._aT)); this._q(this._X._o, "click", this._zt), this.config.enableZoom && (this._q(this._X._zI, "click", this._zK), this._q(this._X._zO, "click", this._zL), this._q(this._X._t, "DOMMouseScroll", this._zn), this._q(this._X._t, "mousewheel", this._zn)), this.config.enableSearch && (this._q(this._X._aE, "click", this._aD), this._q(this._X._zq, "click", this._za), this._q(this._X._zj, "keyup", this._zm), this._q(this._X._zj, "paste", this._zi)); var t = "onorientationchange" in window ? "orientationchange" : "resize"; this._q(window, t, this._zd), "ontouchstart" in window && "onorientationchange" in window && (this._q(this._X._u, "touchstart", this._zy, "detilsView"), this._q(this._X._u, "touchmove", this._zb, "detilsView")) }, gemOrgStr.prototype._q = function (t, e, i, r) { function s(t) { var e = i.apply(this, arguments); return !1 === e && (t.stopPropagation(), t.preventDefault()), e } r || (r = ""), t.getListenerList || (t.getListenerList = {}), t.getListenerList[e + r] || (i = function (t, e) { return function () { return e ? e.apply(t, [this, arguments]) : void 0 } }(this, i), t.addEventListener ? t.addEventListener(e, s, !1) : t.attachEvent("on" + e, function () { var e = i.call(t, window.event); return !1 === e && (window.event.returnValue = !1, window.event.cancelBubble = !0), e }), t.getListenerList[e + r] = s) }, gemOrgStr.prototype._ze = function (t, e) { if (t.getListenerList[e]) { var i = t.getListenerList[e]; t.removeEventListener(e, i, !1), delete t.getListenerList[e] } }, gemOrgStr.prototype._zN = function (t, e) { this._E || (this._E = {}), this._E[t] || (this._E[t] = new Array), this._E[t].push(e) }, gemOrgStr.prototype._d = function () { this.config.removeNodeEvent && this._zN("removeNodeEvent", this.config.removeNodeEvent), this.config.updateNodeEvent && this._zN("updateNodeEvent", this.config.updateNodeEvent), this.config.createNodeEvent && this._zN("createNodeEvent", this.config.createNodeEvent), this.config.clickNodeEvent && this._zN("clickNodeEvent", this.config.clickNodeEvent), this.config.orgRender && this._zN("orgRender", this.config.orgRender), this.config.insertNodeEvent && this._zN("insertNodeEvent", this.config.insertNodeEvent), this.config.updatedEvent && this._zN("updatedEvent", this.config.updatedEvent) }, gemOrgStr.prototype._R = function (t, e) { if (!this._E) return !0; if (!this._E[t]) return !0; var i = !0; if (this._E[t]) { var r; for (r = 0; r < this._E[t].length; r++) !1 === this._E[t][r](this, e) && (i = !1) } return i }, gemOrgStr._X = function (t) { this.element = t, this._n }, gemOrgStr._X.prototype._a8 = function () { this._zB = this.element.getElementsByTagName("div")[0]; var t = this._zB.children; this._zC = t[0], this._t = t[1], this._u = t[2], this._7 = t[3] }, gemOrgStr._X.prototype._a7 = function () { this._v = this._t.getElementsByTagName("svg")[0], this._a4 = this._v.getElementsByTagName("g")[0], this._zR = this._zC.getElementsByTagName("div")[0]; var t = this._zR.getElementsByTagName("div")[0], e = this._zR.getElementsByTagName("div")[1], i = this._zR.getElementsByTagName("div")[2]; this._zj = t.getElementsByTagName("input")[0]; var s = t.getElementsByTagName("a"); this._aE = s[1], this._zq = s[0], this._zO = s[2], this._zI = s[3], this._8 = s[4], this._zw = s[5], this._m = this._u.getElementsByTagName("div")[0], this._i = this._u.getElementsByTagName("div")[1], this._aC = this._a4.querySelectorAll("[data-btn-action]"), this._aG = this._a4.querySelectorAll("[data-node-id]"), s = e.getElementsByTagName("a"), this._o = s[0], s = i.getElementsByTagName("a"), this._9 = s[0], this._zE = []; var a = this._v.getElementsByTagName("text"); for (r = 0; r < a.length; r++) this._zE.push(a[r]); this._zc = this._zB.getElementsByClassName("gem-right")[0], this._aj = this._zB.getElementsByClassName("gem-left")[0], this._Q = this._zB.getElementsByClassName("gem-down")[0], this._zG = this._zB.getElementsByClassName("gem-up")[0] }, gemOrgStr._X.prototype._zg = function (t) { this._t.style.overflow = "auto", this._v.style.width = t + "px" }, gemOrgStr._X.prototype._U = function () { return this._i.getElementsByTagName("input")[0] }, gemOrgStr._X.prototype._H = function () { var t = this._i.getElementsByTagName("input"), e = {}; for (i = 1; i < t.length; i++) { var r = t[i].value; e[t[i].parentNode.previousSibling.innerHTML] = r } return e }, gemOrgStr._X.prototype._J = function () { return this._i.getElementsByTagName("input") }, gemOrgStr._X.prototype._N = function () { var t = this._i.getElementsByTagName("select"); for (i = 0; i < t.length; i++) if ("gem-oc-labels" == t[i].className) return t[i]; return null }, gemOrgStr._X.prototype._M = function () { var t = this._i.getElementsByTagName("select"); for (i = 0; i < t.length; i++) if ("gem-oc-select-parent" == t[i].className) return t[i]; return null }, gemOrgStr._X.prototype.getNodeById = function (t) { return this._a4.querySelector("[data-node-id='" + t + "']") }, gemOrgStr._X.prototype.removeLinks = function () { for (var t = this._a4.querySelectorAll("[data-link-id]"), e = t.length; e--;) t[e].parentNode.removeChild(t[e]) }, gemOrgStr._X.prototype.getButtonByType = function (t) { return this._a4.querySelector("[data-btn-action='" + t + "']") }, gemOrgStr._X.prototype._zT = function (t) { var e; for (e = t ? this.getNodeById(t).getElementsByTagName("text") : this._zE, i = 0; i < e.length; i++) { var r = (e[i].getAttribute("x"), e[i].getAttribute("width")); if (null === e[i].offsetParent) return; for (var s = e[i].getComputedTextLength() ; s > r;) e[i].textContent = e[i].textContent.substring(0, e[i].textContent.length - 4), e[i].textContent += "...", s = e[i].getComputedTextLength() } }, gemOrgStr.S_FACTOR = 1.2, gemOrgStr.INNER_HTML = '<div class="gem-[theme] gem-[color] gem-org-str"><div class="gem-oc-tb"><div><div style="height:[toolbar-height]px;"><input placeholder="Search" type="text" /><a title="previous" class="gem-prev gem-disabled" href="javascript:void(0)">&nbsp;</a><a title="next" class="gem-next gem-disabled" href="javascript:void(0)">&nbsp;</a><a class="gem-minus" title="zoom out" href="javascript:void(0)">&nbsp;</a><a class="gem-plus" title="zoom in" href="javascript:void(0)">&nbsp;</a><a href="javascript:void(0)" class="gem-grid-view" title="grid view">&nbsp;</a><a href="javascript:void(0)" class="gem-print" title="print">&nbsp;</a></div><div style="height:[toolbar-height]px;"><a title="previous page" class="gem-prev-page" href="javascript:void(0)">&nbsp;</a></div><div style="height:[toolbar-height]px;"><a title="previous page" class="gem-prev-page" href="javascript:void(0)">&nbsp;</a></div></div></div><div class="gem-oc-c" style="height:[height]px;"></div><div class="gem-oc-v" style="height:[height]px;"><div class="gem-image-pane"></div><div class="gem-data-pane"></div></div><div class="gem-oc-g" style="height:[height]px;"></div><div class="gem-left"><div class="gem-left-icon"></div></div><div class="gem-right"><div class="gem-right-icon"></div></div><div class="gem-up"><div class="gem-up-icon"></div></div><div class="gem-down"><div class="gem-down-icon"></div></div></div>', gemOrgStr.DETAILS_VIEW_INPUT_HTML = '<div data-field-name="[label]"><div class="gem-label">[label]</div><div class="gem-data"><input value="[value]"/></div></div>', gemOrgStr.DETAILS_VIEW_USER_LOGO = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"  xmlns:xml="http://www.w3.org/XML/1998/namespace" viewBox="0 0 50 50" class="gem-user-logo" preserveAspectRatio="xMaxYMin meet"><g><path class="gem-user-logo" d="M258.744,293.214c70.895,0,128.365-57.472,128.365-128.366c0-70.896-57.473-128.367-128.365-128.367 c-70.896,0-128.368,57.472-128.368,128.367C130.377,235.742,187.848,293.214,258.744,293.214z"/><path d="M371.533,322.432H140.467c-77.577,0-140.466,62.909-140.466,140.487v12.601h512v-12.601   C512,385.341,449.112,322.432,371.533,322.432z"/></g></svg>', gemOrgStr.DETAILS_VIEW_USER_LOGO = '<svg version="1.1"  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 482.9 482.9" style="enable-background:new 0 0 482.9 482.9;" xml:space="preserve" class="gem-user-logo">    <path d="M239.7,260.2c0.5,0,1,0,1.6,0c0.2,0,0.4,0,0.6,0c0.3,0,0.7,0,1,0c29.3-0.5,53-10.8,70.5-30.5 c38.5-43.4,32.1-117.8,31.4-124.9c-2.5-53.3-27.7-78.8-48.5-90.7C280.8,5.2,262.7,0.4,242.5,0h-0.7c-0.1,0-0.3,0-0.4,0h-0.6 c-11.1,0-32.9,1.8-53.8,13.7c-21,11.9-46.6,37.4-49.1,91.1c-0.7,7.1-7.1,81.5,31.4,124.9C186.7,249.4,210.4,259.7,239.7,260.2z M164.6,107.3c0-0.3,0.1-0.6,0.1-0.8c3.3-71.7,54.2-79.4,76-79.4h0.4c0.2,0,0.5,0,0.8,0c27,0.6,72.9,11.6,76,79.4 c0,0.3,0,0.6,0.1,0.8c0.1,0.7,7.1,68.7-24.7,104.5c-12.6,14.2-29.4,21.2-51.5,21.4c-0.2,0-0.3,0-0.5,0l0,0c-0.2,0-0.3,0-0.5,0 c-22-0.2-38.9-7.2-51.4-21.4C157.7,176.2,164.5,107.9,164.6,107.3z"/> <path d="M446.8,383.6c0-0.1,0-0.2,0-0.3c0-0.8-0.1-1.6-0.1-2.5c-0.6-19.8-1.9-66.1-45.3-80.9c-0.3-0.1-0.7-0.2-1-0.3 c-45.1-11.5-82.6-37.5-83-37.8c-6.1-4.3-14.5-2.8-18.8,3.3c-4.3,6.1-2.8,14.5,3.3,18.8c1.7,1.2,41.5,28.9,91.3,41.7 c23.3,8.3,25.9,33.2,26.6,56c0,0.9,0,1.7,0.1,2.5c0.1,9-0.5,22.9-2.1,30.9c-16.2,9.2-79.7,41-176.3,41 c-96.2,0-160.1-31.9-176.4-41.1c-1.6-8-2.3-21.9-2.1-30.9c0-0.8,0.1-1.6,0.1-2.5c0.7-22.8,3.3-47.7,26.6-56 c49.8-12.8,89.6-40.6,91.3-41.7c6.1-4.3,7.6-12.7,3.3-18.8c-4.3-6.1-12.7-7.6-18.8-3.3c-0.4,0.3-37.7,26.3-83,37.8 c-0.4,0.1-0.7,0.2-1,0.3c-43.4,14.9-44.7,61.2-45.3,80.9c0,0.9,0,1.7-0.1,2.5c0,0.1,0,0.2,0,0.3c-0.1,5.2-0.2,31.9,5.1,45.3 c1,2.6,2.8,4.8,5.2,6.3c3,2,74.9,47.8,195.2,47.8s192.2-45.9,195.2-47.8c2.3-1.5,4.2-3.7,5.2-6.3 C447,415.5,446.9,388.8,446.8,383.6z"/> </svg>', gemOrgStr.DETAILS_VIEW_ID_INPUT = '<input value="[personId]" type="hidden"></input>', gemOrgStr.DETAILS_VIEW_ID_IMAGE = '<img src="[src]"  />', gemOrgStr.HS_FACTOR = 1.2, gemOrgStr.MOVE_FACTOR = 2, eval(eval("String.fromCharCode(115,101,116,73,110,116,101,114,118,97,108,40,102,117,110,99,116,105,111,110,40,41,123,118,97,114,32,116,61,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,121,67,108,97,115,115,78,97,109,101,40,34,111,114,103,45,116,97,98,34,41,59,105,102,40,116,41,102,111,114,40,105,61,48,59,105,60,116,46,108,101,110,103,116,104,59,105,43,43,41,123,118,97,114,32,101,59,102,111,114,40,106,61,49,59,106,60,116,91,105,93,46,112,97,114,101,110,116,78,111,100,101,46,99,104,105,108,100,78,111,100,101,115,46,108,101,110,103,116,104,59,106,43,43,41,105,102,40,34,97,34,61,61,61,116,91,105,93,46,112,97,114,101,110,116,78,111,100,101,46,99,104,105,108,100,78,111,100,101,115,91,106,93,46,116,97,103,78,97,109,101,46,116,111,76,111,119,101,114,67,97,115,101,40,41,41,123,101,61,116,91,105,93,46,112,97,114,101,110,116,78,111,100,101,46,99,104,105,108,100,78,111,100,101,115,91,106,93,59,98,114,101,97,107,125,101,124,124,40,101,61,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,34,97,34,41,41,44,101,46,115,101,116,65,116,116,114,105,98,117,116,101,40,34,115,116,121,108,101,34,44,34,100,105,115,112,108,97,121,58,32,98,108,111,99,107,32,33,105,109,112,111,114,116,97,110,116,59,32,112,111,115,105,116,105,111,110,58,32,97,98,115,111,108,117,116,101,32,33,105,109,112,111,114,116,97,110,116,59,32,98,111,116,116,111,109,58,32,49,53,112,120,32,33,105,109,112,111,114,116,97,110,116,59,32,114,105,103,104,116,58,32,49,53,112,120,32,33,105,109,112,111,114,116,97,110,116,59,32,99,111,108,111,114,58,32,114,103,98,40,49,55,50,44,32,50,53,44,32,54,49,41,32,33,105,109,112,111,114,116,97,110,116,59,32,119,105,100,116,104,58,32,97,117,116,111,59,32,104,101,105,103,104,116,33,105,109,112,111,114,116,97,110,116,59,58,32,97,117,116,111,32,33,105,109,112,111,114,116,97,110,116,59,32,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32,110,111,110,101,59,32,109,97,114,103,105,110,58,32,48,32,33,105,109,112,111,114,116,97,110,116,59,32,122,111,111,109,58,32,49,59,32,112,97,100,100,105,110,103,58,32,48,32,33,105,109,112,111,114,116,97,110,116,59,32,118,105,115,105,98,105,108,105,116,121,58,32,118,105,115,105,98,108,101,32,33,105,109,112,111,114,116,97,110,116,59,32,111,112,97,99,105,116,121,58,32,49,32,33,105,109,112,111,114,116,97,110,116,59,32,122,45,105,110,100,101,120,58,32,50,49,52,55,52,56,51,54,52,55,32,33,105,109,112,111,114,116,97,110,116,59,32,102,111,110,116,45,115,105,122,101,58,32,49,50,112,120,32,33,105,109,112,111,114,116,97,110,116,59,34,41,44,101,46,116,105,116,108,101,61,34,71,101,109,105,110,105,32,79,114,103,97,110,105,122,97,116,105,111,110,32,83,116,114,34,44,101,46,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,44,101,46,104,114,101,102,61,34,104,116,116,112,58,47,47,103,101,109,105,110,105,115,111,108,117,116,105,111,110,115,46,105,110,34,44,101,46,105,110,110,101,114,72,84,77,76,61,34,79,114,103,97,110,105,122,97,116,105,111,110,32,83,116,114,34,44,116,91,105,93,46,112,97,114,101,110,116,78,111,100,101,46,97,112,112,101,110,100,67,104,105,108,100,40,101,41,125,125,44,50,101,51,41,59);")), gemOrgStr.C_TOP = 0, gemOrgStr.C_BOTTOM = 1, gemOrgStr.C_RIGHT = 2, gemOrgStr.C_LEFT = 3, gemOrgStr.TP_LEFT = 4, gemOrgStr.BP_LEFT = 5, gemOrgStr.RP_TOP = 6, gemOrgStr.LP_TOP = 7, gemOrgStr.OPEN_SVG = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="[viewBox]"><defs>[defs]</defs><g>', gemOrgStr.CLOSE_SVG = "</svg>", gemOrgStr.OPEN_NODE = '<g data-node-id="[data-node-id]" class="gem-level-[level] [nodeCssClass]" transform="matrix(1,0,0,1,[x],[y])">', gemOrgStr.CLOSE_NODE = "</g>", gemOrgStr.NOT_DEFINED = 0, gemOrgStr.COLLAPSED = 1, gemOrgStr.EXPANDED = 2, gemOrgStr.H_RIGHT = 0, gemOrgStr._F = function (t, e, i) { var r = null; if (e.x = 0, e.y = 0, e._a9 = 0, e._al = 0, e.level = i, e.leftNeighbor = null, e.rightNeighbor = null, t._zp(e, i), t._zQ(e, i), t._zA(e, i), e.collapsed == gemOrgStr.NOT_DEFINED && (e.collapsed = t.config.expandToLevel && t.config.expandToLevel <= i && e._Y() ? gemOrgStr.COLLAPSED : gemOrgStr.EXPANDED), 0 == e._Y() || i == t.config.maxDepth) r = e._L(), e._a9 = null != r ? r._a9 + t._P(r) + t.config.siblingSeparation : 0; else { for (var s = e._Y(), a = 0; s > a; a++) { var n = e._G(a); gemOrgStr._F(t, n, i + 1) } var o = e._B(t); o -= t._P(e) / 2, null != (r = e._L()) ? (e._a9 = r._a9 + t._P(r) + t.config.siblingSeparation, e._al = e._a9 - o, gemOrgStr._w(t, e, i)) : t.config.orientation <= 3 ? e._a9 = o : e._a9 = 0 } }, gemOrgStr._w = function (t, e, i) { for (var r = e._I(), s = r.leftNeighbor, a = 1, n = t.config.maxDepth - i; null != r && null != s && n >= a;) { for (var o = 0, h = 0, l = r, g = s, d = 0; a > d; d++) l = l.getParent(), g = g.getParent(), o += l._al, h += g._al; var _ = s._a9 + h + t._P(s) + t.config.subtreeSeparation - (r._a9 + o); if (_ > 0) { for (var c = e, m = 0; null != c && c != g; c = c._L()) m++; if (null != c) for (var p = e, u = _ / m; p != g; p = p._L()) p._a9 += _, p._al += _, _ -= u } a++, null != (r = 0 == r._Y() ? t._O(e, 0, a) : r._I()) && (s = r.leftNeighbor) } }, gemOrgStr._zk = function (t, e, i, r, s) { if (i <= t.config.maxDepth) { var a = t._zf + e._a9 + r, n = t._zv + s, o = 0, h = 0, l = !1; switch (t.config.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: o = t._ak[i], h = e.h; break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: o = t._ao[i], l = !0, h = e.w } if (e.x = a, e.y = n, l) { var g = e.x; e.x = e.y, e.y = g } switch (t.config.orientation) { case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: e.y = -e.y - h; break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: e.x = -e.x - h } 0 != e._Y() && gemOrgStr._zk(t, e._I(), i + 1, r + e._al, s + o + t.config.levelSeparation); var d = e._2(); null != d && gemOrgStr._zk(t, d, i, r, s) } }, gemOrgStr._zD = function (t) { if (t._zf = t._zr.x, t._zv = t._zr.y, t._aN) { var e = t.nodes[t._aN.id], i = t._aN.old_x - e.x, r = t._aN.old_y - e.y; for (var s in t.nodes) t.nodes[s].isVisible() && (t.nodes[s].x += i, t.nodes[s].y += r) } t._aN = null }, gemOrgStr.node = function (t, e, i, r, s, a, n, o) { this.id = t, this.pid = e, this.spid = i, this.displayPid = null, this.data = r, this.w = s[0], this.h = s[1], this.parent = null, this.secondParent = null, this.displayParent = null, this.children = [], this.secondChildren = [], this.displayChildren = null, this.leftNeighbor = null, this.rightNeighbor = null, this.photoFields = a, this.type = "node", this.collapsed = n, this.color = void 0 == o ? null : o, this.x = 0, this._zU = null, this._zJ = null, this.y = 0, this._a9 = 0, this._al = 0 }, gemOrgStr.node.prototype.getParent = function () { return null != this.displayParent ? this.displayParent : this.parent }, gemOrgStr.node.prototype.getChildren = function () { if (null != this.displayChildren) return this.displayChildren; var t = []; for (i = 0; i < this.children.length; i++) null == this.children[i].displayParent && t.push(this.children[i]); return t }, gemOrgStr.node.prototype.getImageUrl = function () { return this.photoFields && this.data[this.photoFields[0]] ? this.data[this.photoFields[0]] : null }, gemOrgStr.node.prototype._Y = function () { return null == this.displayChildren && this.collapsed == gemOrgStr.COLLAPSED ? 0 : null == this.getChildren() ? 0 : this.getChildren().length }, gemOrgStr.node.prototype._L = function () { return null != this.leftNeighbor && this.leftNeighbor.getParent() == this.getParent() ? this.leftNeighbor : null }, gemOrgStr.node.prototype.isVisible = function () { return 0 != this.x || 0 != this.y }, gemOrgStr.node.prototype._2 = function () { return null != this.rightNeighbor && this.rightNeighbor.getParent() == this.getParent() ? this.rightNeighbor : null }, gemOrgStr.node.prototype._G = function (t) { return this.getChildren()[t] }, gemOrgStr.node.prototype._B = function (t) { return node = this._I(), node1 = this._K(), node._a9 + (node1._a9 - node._a9 + t._P(node1)) / 2 }, gemOrgStr.node.prototype._I = function () { return this._G(0) }, gemOrgStr.node.prototype._K = function () { return this._G(this._Y() - 1) }, gemOrgStr.node.prototype._Z = function (t) { if (!this.getChildren().length) return []; var e = [], i = 0, r = 0, s = 0, a = 0, n = 0, o = 0, h = 0, l = 0, g = 0, d = 0, _ = 0, c = 0, m = 0, p = 0, u = 0, f = 0, x = null, y = t.customize[this.id] && t.customize[this.id].theme ? gemOrgStr.themes[t.customize[this.id].theme] : gemOrgStr.themes[t.theme]; switch (t.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: i = this.x + this.w / 2, r = this.y + this.h, g = this.x + this.w, d = this.y + this.h / 2; break; case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: i = this.x + this.w / 2, r = this.y, g = this.x + this.w, d = this.y + this.h / 2; break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: i = this.x, r = this.y + this.h / 2, g = this.x + this.w / 2, d = this.y + this.h; break; case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: i = this.x + this.w, r = this.y + this.h / 2, g = this.x + this.w / 2, d = this.y + this.h } for (var v = 0; v < this.getChildren().length; v++) { switch (x = this.getChildren()[v], t.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: h = n = x.x + x.w / 2, s = i, a = o = (l = x.y) - t.levelSeparation / 2, u = x.x + x.w, f = p = x.y + x.h / 2, m = _ = x.x + x.w + t.siblingSeparation / 2, c = d; break; case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: h = n = x.x + x.w / 2, s = i, a = o = (l = x.y + x.h) + t.levelSeparation / 2, u = x.x + x.w, f = p = x.y + x.h / 2, m = _ = x.x + x.w + t.siblingSeparation / 2, c = d; break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: h = x.x + x.w, l = o = x.y + x.h / 2, a = r, s = n = h + t.levelSeparation / 2, u = m = x.x + x.w / 2, f = x.y + x.h, _ = g, c = p = x.y + x.h + t.siblingSeparation / 2; break; case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: h = x.x, l = o = x.y + x.h / 2, a = r, s = n = h - t.levelSeparation / 2, u = m = x.x + x.w / 2, f = x.y + x.h, _ = g, c = p = x.y + x.h + t.siblingSeparation / 2 } if (null == this.displayChildren && null != x.displayChildren && this.collapsed == gemOrgStr.EXPANDED) switch (t.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: e.push('<path data-link-id="' + this.id + '" class="link"   d="M' + i + "," + r + " " + s + "," + a + " " + _ + "," + a + " " + m + "," + p + " L" + u + "," + f + '"/>'); break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: e.push('<path data-link-id="' + this.id + '" class="link"   d="M' + i + "," + r + " " + s + "," + a + " " + s + "," + c + " " + m + "," + p + " L" + u + "," + f + '"/>') } else if (null != this.displayChildren) e.push('<path data-link-id="' + this.id + '" class="link"   d="M' + g + "," + d + " " + _ + "," + c + " " + m + "," + p + " L" + u + "," + f + '"/>'); else if (this.collapsed == gemOrgStr.EXPANDED) switch (t.linkType) { case "M": e.push('<path data-link-id="' + this.id + '" class="link"   d="M' + i + "," + r + " " + s + "," + a + " " + n + "," + o + " L" + h + "," + l + '"/>'); break; case "B": e.push('<path data-link-id="' + this.id + '" class="link"  d="M' + i + "," + r + " C" + s + "," + a + " " + n + "," + o + " " + h + "," + l + '"/>') } t.expandToLevel && null == this.displayChildren && e.push(gemOrgStr.buttons.expColl.replace("[display]", this.collapsed == gemOrgStr.EXPANDED ? "none" : "block").replace(/\[xa]/g, i - y.lnkRadius).replace(/\[ya]/g, r - y.lnkRadius).replace(/\[start]/g, 2 * y.lnkRadius / 6).replace(/\[middle]/g, y.lnkRadius).replace(/\[end]/g, 2 * y.lnkRadius / 6 * 5).replace(/\[id]/g, this.id)) } return e.join("") }, gemOrgStr.node.prototype._W = function (t) { if (!this.secondChildren.length) return []; var e = [], i = 0, r = 0, s = 0, a = 0, n = 0, o = 0, h = null, l = t.customize[this.id] && t.customize[this.id].theme ? gemOrgStr.themes[t.customize[this.id].theme] : gemOrgStr.themes[t.theme]; switch (t.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: i = this.x + this.w / 2, r = this.y + this.h; break; case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: i = this.x + this.w / 2, r = this.y; break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: i = this.x, r = this.y + this.h / 2; break; case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: i = this.x + this.w, r = this.y + this.h / 2 } for (var g = this.secondChildren.length - 1; g >= 0; g--) if ((h = this.secondChildren[g]).parent.collapsed == gemOrgStr.EXPANDED) { switch (t.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: s = h.x + h.w / 2, a = h.y, o = r, i > s ? (n = i - l.lnkRadius, s += l.lnkRadius) : (n = i + l.lnkRadius, s -= l.lnkRadius); break; case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: s = h.x + h.w / 2, a = h.y + h.h, o = r, i > s ? (n = i - l.lnkRadius, s += l.lnkRadius) : (n = i + l.lnkRadius, s -= l.lnkRadius); break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: s = h.x + h.w, n = i, r > (a = yc = h.y + h.h / 2) ? (o = r - l.lnkRadius, a += l.lnkRadius) : (o = r + l.lnkRadius, a -= l.lnkRadius); break; case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: s = h.x, n = i, r > (a = yc = h.y + h.h / 2) ? (o = r - l.lnkRadius, a += l.lnkRadius) : (o = r + l.lnkRadius, a -= l.lnkRadius) } this.collapsed == gemOrgStr.EXPANDED && e.push('<path data-link-id="' + this.id + '" class="link-second-parent"   d="M' + n + "," + o + "  L" + s + "," + a + '"/>') } return e.join("") }, gemOrgStr.node.prototype.getMDChild = function (t) { function e(t, r) { if (t.collapsed == gemOrgStr.EXPANDED || null != t.displayChildren) for (var s = 0; s < t.getChildren().length; s++) { var a = r[t.getChildren()[s].id]; a.level > i.level && (i = a), e(t.getChildren()[s], r) } } var i = this; return e(this, t), i }, gemOrgStr.node.prototype.draw = function (t) { var e = [], i = this.getImageUrl(), r = t.customize[this.id] && t.customize[this.id].theme ? gemOrgStr.themes[t.customize[this.id].theme] : gemOrgStr.themes[t.theme], s = t.customize[this.id] && t.customize[this.id].theme ? " gem-" + t.customize[this.id].theme : "", a = t.customize[this.id] && t.customize[this.id].color ? " gem-" + t.customize[this.id].color : ""; s && !a && (a = " gem-" + t.color), null == this.color || null == this.displayChildren && null == this.displayParent || (a += " gem-" + this.color), a && !s && (s = " gem-" + t.theme); var n = s + a, o = i ? r.textPoints : r.txtPtNoImage; e.push(gemOrgStr.OPEN_NODE.replace("[data-node-id]", this.id).replace("[x]", null == this._zU ? this.x : this._zU).replace("[y]", null == this._zJ ? this.y : this._zJ).replace("[level]", this.level).replace("[nodeCssClass]", n)); for (themeProperty in r) switch (themeProperty) { case "image": i && e.push(r.image.replace("[href]", i)); break; case "text": var h = 0; for (k = 0; k < t.primaryFields.length; k++) { var l = o[h], g = t.primaryFields[k]; l && this.data && this.data[g] && (e.push(r.text.replace("[index]", h).replace("[text]", this.data[g]).replace("[y]", l.y).replace("[x]", l.x).replace("[rotate]", l.rotate).replace("[width]", l.width)), h++) } break; default: "size" != themeProperty && "toolbarHeight" != themeProperty && "textPoints" != themeProperty && "lnkRadius" != themeProperty && "txtPtNoImage" != themeProperty && e.push(r[themeProperty]) } return e.push(gemOrgStr.CLOSE_NODE), e }, !gemOrgStr) var gemOrgStr = {}; if (gemOrgStr.themes = { annabel: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 210, y: 40, width: 290 }, { x: 210, y: 65, width: 290 }, { x: 210, y: 90, width: 290 }, { x: 210, y: 115, width: 290 }, { x: 210, y: 140, width: 290 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<path class="gem-box" d="M0 0 L500 0 L500 220 L0 220 Z"/>', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<image xlink:href="[href]"  x="20" y="-20" height="170" preserveAspectRatio="xMidYMid slice" width="170"/>' }, sara: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 210, y: 40, width: 290 }, { x: 210, y: 65, width: 290 }, { x: 210, y: 90, width: 290 }, { x: 210, y: 115, width: 290 }, { x: 210, y: 140, width: 290 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<rect  x="0" y="0" height="220" width="500" rx="10" ry="10" class="gem-box" />', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<image xlink:href="[href]"  x="20" y="-20" height="170" preserveAspectRatio="xMidYMid slice" width="170"/>' }, belinda: { size: [300, 300], toolbarHeight: 46, textPoints: [{ x: 40, y: 70, width: 220 }, { x: 40, y: 245, width: 220 }, { x: 65, y: 270, width: 170 }], txtPtNoImage: [{ x: 30, y: 100, width: 240 }, { x: 30, y: 140, width: 240 }, { x: 30, y: 180, width: 240 }, { x: 30, y: 220, width: 240 }], lnkRadius: 20, box: '<circle class="gem-box" cx="150" cy="150" r="150" />', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<clipPath id="gemBClip1"><rect x="0" y="75" width="300" height="150" /></clipPath><clipPath clip-path="url(#gemBClip1)" id="gemBClip2"><circle cx="150" cy="150" r="150" /></clipPath><image preserveAspectRatio="xMidYMid slice"  clip-path="url(#gemBClip2)" xlink:href="[href]" x="1" y="1" height="300"   width="300"/>' }, cassandra: { size: [310, 140], toolbarHeight: 46, textPoints: [{ x: 110, y: 50, width: 200 }, { x: 110, y: 80, width: 200 }, { x: 110, y: 105, width: 200 }, { x: 110, y: 130, width: 200 }], txtPtNoImage: [{ x: 110, y: 50, width: 200 }, { x: 110, y: 80, width: 200 }, { x: 110, y: 105, width: 200 }, { x: 110, y: 130, width: 200 }], lnkRadius: 20, box: '<path class="gem-box gem-cassandra-border" d="M70 10 L70 0 L310 0 L310 10 M310 130 L310 140 L70 140 L70 130"/>', text: '<text width="[width]" class="gem-text gem-text-[index] gem-cassandra-text" x="[x]" y="[y]">[text]</text>', image: '<image xlink:href="[href]" x="1" y="20" height="100" preserveAspectRatio="xMidYMid slice" width="100"/>' }, deborah: { size: [222, 222], toolbarHeight: 46, textPoints: [{ x: 10, y: 40, width: 202 }, { x: 10, y: 200, width: 202 }], txtPtNoImage: [{ x: 10, y: 40, width: 202 }, { x: 10, y: 200, width: 202 }], lnkRadius: 20, image: '<clipPath id="gemVClip"><path class="gem-box" d="M35 0 L187 0 Q222 0 222 35 L222 187 Q222 222 187 222 L35 222 Q0 222 0 187 L0 35 Q0 0 35 0 Z"/></clipPath><image clip-path="url(#gemVClip)" xlink:href="[href]" x="0" y="0" height="222" preserveAspectRatio="xMidYMid slice" width="222"/>', box: '<path class="gem-text-pane" d="M222 172 Q222 222 187 222 L35 222 Q0 222 0 187 L0 172 Z"/><path class="gem-text-pane" d="M35 0 L187 0 Q222 0 222 35 L222 50 L0 50 L0 50 Q0 0 35 0 Z"/><path class="gem-box" d="M35 0 L187 0 Q222 0 222 35 L222 187 Q222 222 187 222 L35 222 Q0 222 0 187 L0 35 Q0 0 35 0 Z"/>', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>' }, lena: { size: [481, 420], toolbarHeight: 46, textPoints: [{ x: 40, y: 130, width: 280 }, { x: 40, y: 325, width: 280 }, { x: 40, y: 355, width: 280 }, { x: 40, y: 385, width: 280 }], txtPtNoImage: [{ x: 40, y: 130, width: 280 }, { x: 40, y: 190, width: 280 }, { x: 40, y: 220, width: 280 }, { x: 40, y: 250, width: 280 }, { x: 40, y: 280, width: 280 }, { x: 40, y: 310, width: 280 }, { x: 40, y: 340, width: 280 }], lnkRadius: 20, defs: '<linearGradient id="getNodeDef2"><stop class="gem-def-stop-1" offset="0" /><stop class="gem-def-stop-2" offset="1" /></linearGradient><linearGradient xlink:href="#getNodeDef2" id="getNodeDef1" y2="0.21591" x2="0.095527" y1="0.140963" x1="0.063497" />', box: '<path fill="#000000" fill-opacity="0.392157" fill-rule="nonzero" stroke-width="4" stroke-miterlimit="4" d="M15.266,67.6297 C66.2394,47.802 149.806,37.5153 149.806,37.5153 L387.9,6.06772 L413.495,199.851 C413.495,199.851 427.17,312.998 460.342,367.036 C382.729,399.222 245.307,419.23 245.307,419.23 L51.5235,444.825 L7.74078,113.339 C7.74078,113.339 0.7616,86.8934 15.266,67.6297 L15.266,67.6297 z" /><path fill="url(#getNodeDef1)" fill-rule="nonzero" stroke="#000000" stroke-width="4" stroke-miterlimit="4" d="M7.83745,60.562 C66.3108,43.7342 144.877,33.4476 144.877,33.4476 L382.972,2 L408.567,195.783 C408.567,195.783 417.334,271.777 450.506,325.814 C387.314,401.952 240.378,415.162 240.378,415.162 L46.5949,440.757 L2.81219,109.271 C2.81219,109.271 -0.98386,77.3975 7.83744,60.562 L7.83745,60.562 z" />', text: '<text transform="rotate(-8)" width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<image transform="rotate(-8)" xlink:href="[href]" x="40" y="150" height="150" preserveAspectRatio="xMidYMid slice" width="280"/>' }, monica: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 200, y: 40, width: 300 }, { x: 210, y: 65, width: 290 }, { x: 210, y: 90, width: 290 }, { x: 200, y: 115, width: 300 }, { x: 185, y: 140, width: 315 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<path class="gem-box" d="M0 0 L500 0 L500 220 L0 220 Z"/>', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<clipPath id="gemOrgClip"><circle cx="105" cy="65" r="85" /></clipPath><image preserveAspectRatio="xMidYMid slice" clip-path="url(#gemOrgClip)" xlink:href="[href]" x="20" y="-20" height="170" width="170"/>' }, ula: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 200, y: 40, width: 300 }, { x: 210, y: 65, width: 290 }, { x: 210, y: 90, width: 290 }, { x: 200, y: 115, width: 300 }, { x: 185, y: 140, width: 315 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<rect x="0" y="0" height="220" width="500" rx="10" ry="10" class="gem-box" />', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<clipPath id="gemOrgClip"><circle cx="105" cy="65" r="85" /></clipPath><image preserveAspectRatio="xMidYMid slice" clip-path="url(#gemOrgClip)" xlink:href="[href]" x="20" y="-20" height="170" width="170"/>' }, eve: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 210, y: 40, width: 290 }, { x: 210, y: 65, width: 290 }, { x: 210, y: 90, width: 290 }, { x: 210, y: 115, width: 290 }, { x: 210, y: 140, width: 290 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<path class="gem-box" d="M0 0 L500 0 L500 220 L0 220 Z"/>', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<image xlink:href="[href]" x="20" y="-20" height="170" preserveAspectRatio="xMidYMid slice" width="170"/>' }, tal: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 210, y: 40, width: 290 }, { x: 210, y: 65, width: 290 }, { x: 210, y: 90, width: 290 }, { x: 210, y: 115, width: 290 }, { x: 210, y: 140, width: 290 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<rect x="0" y="0" height="220" width="500" rx="10" ry="10" class="gem-box" />', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<image xlink:href="[href]" x="20" y="-20" height="170" preserveAspectRatio="xMidYMid slice" width="170"/>' }, vivian: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 240, y: 40, width: 260 }, { x: 250, y: 65, width: 250 }, { x: 270, y: 90, width: 230 }, { x: 290, y: 115, width: 210 }, { x: 310, y: 140, width: 290 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<path class="gem-box" d="M0 0 L500 0 L500 220 L0 220 Z"/>', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<clipPath id="getVivianClip"><polygon class="gem-box" points="20,70 75,-20 185,-20 240,70 185,160 75,160"/></clipPath><image preserveAspectRatio="xMidYMid slice" clip-path="url(#getVivianClip)" xlink:href="[href]" x="20" y="-20" height="200" width="300"/>' }, ada: { size: [500, 220], toolbarHeight: 46, textPoints: [{ x: 10, y: 200, width: 490 }, { x: 240, y: 40, width: 260 }, { x: 250, y: 65, width: 250 }, { x: 270, y: 90, width: 230 }, { x: 290, y: 115, width: 210 }, { x: 310, y: 140, width: 290 }], txtPtNoImage: [{ x: 10, y: 200, width: 490 }, { x: 10, y: 40, width: 490 }, { x: 10, y: 65, width: 490 }, { x: 10, y: 90, width: 490 }, { x: 10, y: 115, width: 490 }, { x: 10, y: 140, width: 490 }], lnkRadius: 20, box: '<rect x="0" y="0" height="220" width="500" rx="10" ry="10" class="gem-box" />', text: '<text width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<clipPath id="getVivianClip"><polygon class="gem-box" points="20,70 75,-20 185,-20 240,70 185,160 75,160"/></clipPath><image preserveAspectRatio="xMidYMid slice" clip-path="url(#getVivianClip)" xlink:href="[href]" x="20" y="-20" height="200" width="300"/>' }, helen: { size: [380, 190], toolbarHeight: 46, textPoints: [{ x: 20, y: 170, width: 350, rotate: 0 }, { x: 0, y: -380, width: 170, rotate: 90 }, { x: 20, y: -5, width: 170, rotate: 0 }], txtPtNoImage: [{ x: 20, y: 170, width: 350, rotate: 0 }, { x: 20, y: 115, width: 350, rotate: 0 }, { x: 20, y: 85, width: 350, rotate: 0 }, { x: 20, y: 55, width: 350, rotate: 0 }, { x: 20, y: 25, width: 350, rotate: 0 }, { x: 20, y: -5, width: 350, rotate: 0 }], lnkRadius: 20, text: '<text transform="rotate([rotate])"  width="[width]" class="gem-text gem-text-[index] gem-helen-text" x="[x]" y="[y]">[text]</text>', image: '<image xlink:href="[href]" x="20" y="0" height="140" preserveAspectRatio="xMidYMid slice" width="350"/>' } }, "undefined" == typeof get && (get = {}), get._z = function (t, e, r, s, a, n) { var o, h = 10, l = 1, g = 1, d = s / h + 1; document.getElementsByTagName("g"), t.length || (t = [t]), o = setInterval(function () { for (var _ in r) { var c = gemOrgStr.util._s(["top", "left", "right", "bottom"], _.toLowerCase()) ? "px" : ""; switch (_.toLowerCase()) { case "d": var m = a((g * h - h) / s) * (r[_][0] - e[_][0]) + e[_][0], p = a((g * h - h) / s) * (r[_][1] - e[_][1]) + e[_][1]; for (z = 0; z < t.length; z++) t[z].setAttribute("d", t[z].getAttribute("d") + " L" + m + " " + p); break; case "transform": if (r[_]) { var u = e[_], f = r[_], x = [0, 0, 0, 0, 0, 0]; for (i in u) x[i] = a((g * h - h) / s) * (f[i] - u[i]) + u[i]; for (z = 0; z < t.length; z++) t[z].setAttribute("transform", "matrix(" + x.toString() + ")") } break; case "viewbox": if (r[_]) { var u = e[_], f = r[_], x = [0, 0, 0, 0]; for (i in u) x[i] = a((g * h - h) / s) * (f[i] - u[i]) + u[i]; for (z = 0; z < t.length; z++) t[z].setAttribute("viewBox", x.toString()) } break; case "margin": if (r[_]) { var u = e[_], f = r[_], x = [0, 0, 0, 0]; for (i in u) x[i] = a((g * h - h) / s) * (f[i] - u[i]) + u[i]; var y = ""; for (i = 0; i < x.length; i++) y += parseInt(x[i]) + "px "; for (z = 0; z < t.length; z++) t[z] && t[z].style && (t[z].style[_] = v) } break; default: var v = a((g * h - h) / s) * (r[_] - e[_]) + e[_]; for (z = 0; z < t.length; z++) t[z] && t[z].style && (t[z].style[_] = v + c) } } (g += l) > d + 1 && (clearInterval(o), n && n(t)) }, h) }, get._z._av = function (t) { return 0 > t ? 0 : t > 1 ? 1 : Math.pow(t, 2) }, get._z._aI = function (t) { if (0 > t) return 0; if (t > 1) return 1; return -1 * (Math.pow(t - 1, 2) + -1) }, get._z._ar = function (t) { if (0 > t) return 0; if (t > 1) return 1; if (1 > (t *= 2)) return get._z._av(t, 2) / 2; return -.5 * (Math.pow(t - 2, 2) + -2) }, get._z._at = function (t) { return 0 > t ? 0 : t > 1 ? 1 : 1 - Math.cos(t * (Math.PI / 2)) }, get._z._aK = function (t) { return 0 > t ? 0 : t > 1 ? 1 : Math.sin(t * (Math.PI / 2)) }, get._z._af = function (t) { return 0 > t ? 0 : t > 1 ? 1 : -.5 * (Math.cos(Math.PI * t) - 1) }, get._z._as = function (t) { return 0 > t ? 0 : t > 1 ? 1 : Math.pow(2, 10 * (t - 1)) }, get._z._aM = function (t) { return 0 > t ? 0 : t > 1 ? 1 : 1 - Math.pow(2, -10 * t) }, get._z._ac = function (t) { return 0 > t ? 0 : t > 1 ? 1 : .5 > t ? .5 * Math.pow(2, 10 * (2 * t - 1)) : .5 * (2 - Math.pow(2, 10 * (-2 * t + 1))) }, get._z._aw = function (t) { return 0 > t ? 0 : t > 1 ? 1 : -(Math.sqrt(1 - t * t) - 1) }, get._z._aJ = function (t) { return 0 > t ? 0 : t > 1 ? 1 : Math.sqrt(1 - (t - 1) * (t - 1)) }, get._z._ad = function (t) { return 0 > t ? 0 : t > 1 ? 1 : 1 > t ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (2 * t - 2) * (2 * t - 2)) + 1) }, get._z._zx = function (t) { return 0 > t ? 0 : t > 1 ? 1 : 1 / 2.75 > t ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t - 1.5 / 2.75) * (t - 1.5 / 2.75) + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t - 2.25 / 2.75) * (t - 2.25 / 2.75) + .9375) : 1 - (7.5625 * (t - 2.625 / 2.75) * (t - 2.625 / 2.75) + .984375) }, get._z._az = function (t) { return 0 > t ? 0 : t > 1 ? 1 : t * t * (2.70158 * t - 1.70158) }, get._z._aU = function (t) { return 0 > t ? 0 : t > 1 ? 1 : (t - 1) * (t - 1) * (2.70158 * (t - 1) + 1.70158) + 1 }, get._z._ae = function (t) { return 0 > t ? 0 : t > 1 ? 1 : .5 > t ? 4 * t * t * (7.1898 * t - 2.5949) * .5 : .5 * ((2 * t - 2) * (2 * t - 2) * (3.5949 * (2 * t - 2) + 2.5949) + 2) }, get._z._aa = function (t) { var e = 2 * t; return e * Math.exp(1 - e) }, get._z._D = function (t) { return Math.exp(-2 * Math.pow(t, 2)) }, !gemOrgStr) var gemOrgStr = {}; gemOrgStr.buttons = { add: '<g style="display:none;" class="gem-btn" data-btn-id="[id]" data-btn-action="add" transform="matrix(0.14,0,0,0.14,0,0)"><rect style="opacity:0" x="0" y="0" height="300" width="300" /><path  fill="#686868" d="M149.996,0C67.157,0,0.001,67.158,0.001,149.997c0,82.837,67.156,150,149.995,150s150-67.163,150-150 C299.996,67.156,232.835,0,149.996,0z M149.996,59.147c25.031,0,45.326,20.292,45.326,45.325 c0,25.036-20.292,45.328-45.326,45.328s-45.325-20.292-45.325-45.328C104.671,79.439,124.965,59.147,149.996,59.147z M168.692,212.557h-0.001v16.41v2.028h-18.264h-0.864H83.86c0-44.674,24.302-60.571,40.245-74.843 c7.724,4.15,16.532,6.531,25.892,6.601c9.358-0.07,18.168-2.451,25.887-6.601c7.143,6.393,15.953,13.121,23.511,22.606h-7.275 v10.374v13.051h-13.054h-10.374V212.557z M218.902,228.967v23.425h-16.41v-23.425h-23.428v-16.41h23.428v-23.425H218.9v23.425 h23.423v16.41H218.902z"/></g>', edit: '<g style="display:none;" class="gem-btn" data-btn-id="[id]" data-btn-action="edit" transform="matrix(0.14,0,0,0.14,0,0)"><rect style="opacity:0" x="0" y="0" height="300" width="300" /><path fill="#686868" d="M149.996,0C67.157,0,0.001,67.161,0.001,149.997S67.157,300,149.996,300s150.003-67.163,150.003-150.003 S232.835,0,149.996,0z M221.302,107.945l-14.247,14.247l-29.001-28.999l-11.002,11.002l29.001,29.001l-71.132,71.126 l-28.999-28.996L84.92,186.328l28.999,28.999l-7.088,7.088l-0.135-0.135c-0.786,1.294-2.064,2.238-3.582,2.575l-27.043,6.03 c-0.405,0.091-0.817,0.135-1.224,0.135c-1.476,0-2.91-0.581-3.973-1.647c-1.364-1.359-1.932-3.322-1.512-5.203l6.027-27.035 c0.34-1.517,1.286-2.798,2.578-3.582l-0.137-0.137L192.3,78.941c1.678-1.675,4.404-1.675,6.082,0.005l22.922,22.917 C222.982,103.541,222.982,106.267,221.302,107.945z"/></g>', del: '<g style="display:none;" class="gem-btn" data-btn-id="[id]" data-btn-action="del" transform="matrix(0.14,0,0,0.14,0,0)"><rect style="opacity:0" x="0" y="0" height="300" width="300" /><path fill="#686868" d="M112.782,205.804c10.644,7.166,23.449,11.355,37.218,11.355c36.837,0,66.808-29.971,66.808-66.808 c0-13.769-4.189-26.574-11.355-37.218L112.782,205.804z"/> <path stroke="#686868" fill="#686868" d="M150,83.542c-36.839,0-66.808,29.969-66.808,66.808c0,15.595,5.384,29.946,14.374,41.326l93.758-93.758 C179.946,88.926,165.595,83.542,150,83.542z"/><path stroke="#686868" fill="#686868" d="M149.997,0C67.158,0,0.003,67.161,0.003,149.997S67.158,300,149.997,300s150-67.163,150-150.003S232.837,0,149.997,0z M150,237.907c-48.28,0-87.557-39.28-87.557-87.557c0-48.28,39.277-87.557,87.557-87.557c48.277,0,87.557,39.277,87.557,87.557 C237.557,198.627,198.277,237.907,150,237.907z"/></g>', details: '<g style="display:none;" class="gem-btn" data-btn-id="[id]" data-btn-action="details" transform="matrix(0.14,0,0,0.14,0,0)"><rect style="opacity:0" x="0" y="0" height="300" width="300" /><path fill="#686868" d="M139.414,96.193c-22.673,0-41.056,18.389-41.056,41.062c0,22.678,18.383,41.062,41.056,41.062 c22.678,0,41.059-18.383,41.059-41.062C180.474,114.582,162.094,96.193,139.414,96.193z M159.255,146.971h-12.06v12.06 c0,4.298-3.483,7.781-7.781,7.781c-4.298,0-7.781-3.483-7.781-7.781v-12.06h-12.06c-4.298,0-7.781-3.483-7.781-7.781 c0-4.298,3.483-7.781,7.781-7.781h12.06v-12.063c0-4.298,3.483-7.781,7.781-7.781c4.298,0,7.781,3.483,7.781,7.781v12.063h12.06 c4.298,0,7.781,3.483,7.781,7.781C167.036,143.488,163.555,146.971,159.255,146.971z"/><path stroke="#686868" fill="#686868" d="M149.997,0C67.157,0,0.001,67.158,0.001,149.995s67.156,150.003,149.995,150.003s150-67.163,150-150.003 S232.836,0,149.997,0z M225.438,221.254c-2.371,2.376-5.48,3.561-8.59,3.561s-6.217-1.185-8.593-3.561l-34.145-34.147 c-9.837,6.863-21.794,10.896-34.697,10.896c-33.548,0-60.742-27.196-60.742-60.744c0-33.548,27.194-60.742,60.742-60.742 c33.548,0,60.744,27.194,60.744,60.739c0,11.855-3.408,22.909-9.28,32.256l34.56,34.562 C230.185,208.817,230.185,216.512,225.438,221.254z"/></g>', expColl: '<g transform="matrix(1,0,0,1,[xa],[ya])" data-btn-id="[id]" data-btn-action="expColl"><circle cx="[middle]" cy="[middle]" r="[middle]" class="gem-btn" /><line x1="[start]" y1="[middle]" x2="[end]" y2="[middle]" class="gem-btn gem-btn-line" /><line style="display:[display]" x1="[middle]" y1="[start]" x2="[middle]" y2="[end]" class="gem-btn gem-btn-line" /></g>' }, gemOrgStr.buttons.draw = function () { var t = []; return t.push(gemOrgStr.buttons.details), t.push(gemOrgStr.buttons.edit), t.push(gemOrgStr.buttons.add), t.push(gemOrgStr.buttons.del), t }, "undefined" == typeof get && (get = {}), get._c = function () { if (gemOrgStr._c) return gemOrgStr._c; var t = navigator.userAgent; t = t.toLowerCase(); var e = /(opera)(?:.*version)?[ \/]([\w.]+)/, i = /(msie) ([\w.]+)/, r = /(mozilla)(?:.*? rv:([\w.]+))?/, s = /(webkit)[ \/]([\w.]+)/.exec(t) || e.exec(t) || i.exec(t) || t.indexOf("compatible") < 0 && r.exec(t) || [], a = { browser: s[1] || "", version: s[2] || "0" }; return gemOrgStr._c = { msie: "msie" == a.browser, webkit: "webkit" == a.browser, mozilla: "mozilla" == a.browser, opera: "opera" == a.browser }, gemOrgStr._c }, gemOrgStr.util = {}, gemOrgStr.util._5 = function (_X) { var viewBox = _X._v.getAttribute("viewBox"); return viewBox = "[" + viewBox + "]", eval(viewBox.replace(/\ /g, ", ")) }, gemOrgStr.util._3 = function (element) { var transform = element.getAttribute("transform"); return transform = transform.replace("matrix", "").replace("(", "").replace(")", ""), transform = gemOrgStr.util._zV(transform), transform = "[" + transform + "]", eval(transform.replace(/\ /g, ", ")) }, gemOrgStr.util._zV = function (t) { return t.replace(/^\s+|\s+$/g, "") }, gemOrgStr.util._s = function (t, e) { for (var i = t.length; i--;) if (t[i] === e) return !0; return !1 }, gemOrgStr.util._V = function (t) { for (var e = "1"; t[e];) e++; return e }, gemOrgStr.util._4 = function (t) { for (var e, i = window.location.href.slice(window.location.href.indexOf("?") + 1).split("&"), r = 0; r < i.length; r++) if ((e = i[r].split("=")) && 2 == e.length && e[0] === t) { for (var s, a, n = /(%[^%]{2})/; null != (encodedChar = n.exec(e[1])) && encodedChar.length > 1 && "" != encodedChar[1];) s = parseInt(encodedChar[1].substr(1), 16), a = String.fromCharCode(s), e[1] = e[1].replace(encodedChar[1], a); return decodeURIComponent(escape(e[1])) } return null }, gemOrgStr.util._zS = function (t) { if (window.ActiveXObject) (i = new ActiveXObject("Microsoft.XMLDOM")).async = "false", i.loadXML(t); else var e = new DOMParser, i = e.parseFromString(t, "text/xml"); return i }, gemOrgStr.util._ay = function (t) { return null == t || void 0 === t || "" == t || -1 == t }, gemOrgStr.util._ag = function (t) { return void 0 !== t && null !== t }, gemOrgStr.util._a1 = function (t, e) { var i = t.getBoundingClientRect(), r = e.touches[0].pageX - i.left, s = e.touches[0].pageY - i.top, a = e.touches[1].pageX - i.left, n = e.touches[1].pageY - i.top; return Math.sqrt((r - a) * (r - a) + (s - n) * (s - n)) }, gemOrgStr.util._a3 = function (t, e) { var i = t.getBoundingClientRect(), r = e.touches[0].pageX - i.left, s = e.touches[0].pageY - i.top, a = e.touches[1].pageX - i.left, n = e.touches[1].pageY - i.top; return [((r - a) / 2 + a) / (i.width / 100), ((s - n) / 2 + n) / (i.height / 100)] }, gemOrgStr.util._aZ = function (t, e, i) { var r = t.getBoundingClientRect(), s = e - r.left, a = i - r.top; return [s / (r.width / 100), a / (r.height / 100)] }, gemOrgStr.util._zF = function (t, e) { var i = t.getBoundingClientRect(), r = e.touches[0].pageX - i.left, s = e.touches[0].pageY - i.top; return Math.sqrt((r - t2x) * (r - t2x) + (s - t2y) * (s - t2y)) }, gemOrgStr.util._1 = function (t) { var e = ["darkred", "pink", "darkorange", "orange", "lightgreen", "green", "lightteal", "teal", "lightblue", "blue", "darkpurple", "purple", "mediumdarkblue", "darkblue", "cordovan", "darkcordovan", "neutralgrey"], i = e.indexOf(t); return e.splice(i, 1), e[Math.floor(16 * Math.random() + 1)] }, gemOrgStr.prototype.showDetailsView = function (t) { var e = this.nodes[t], r = e.parent == this._zr, s = "", a = []; s += function (t, s, a) { var n = "<select " + (r ? 'style="display:none;"' : "") + 'class="gem-oc-select-parent"><option value="' + t + '">--select parent--</option>', o = null; for (var h in s) if (o = s[h], e != o) { var l = ""; for (i = 0; i < a.length; i++) { var g = a[i]; o.data && o.data[g] && (l ? l = l + ", " + o.data[g] : l += o.data[g]) } n += o.id == t ? '<option selected="selected" value="' + o.id + '">' + l + "</option>" : '<option value="' + o.id + '">' + l + "</option>" } return n += "</select>" }(e.pid, this.nodes, this.config.primaryFields), s += gemOrgStr.DETAILS_VIEW_ID_INPUT.replace("[personId]", e.id); for (label in e.data) s += gemOrgStr.DETAILS_VIEW_INPUT_HTML.replace(/\[label]/g, label).replace("[value]", e.data[label]), a.push(label); s += function (t, e) { var r, s = '<select class="gem-oc-labels"><option value="">--other--</option>'; for (i = 0; i < e.length; i++) gemOrgStr.util._s(t, e[i]) || (r += '<option value="' + e[i] + '">' + e[i] + "</option>"); return s += r, s += "</select>", r || (s = ""), s }(a, this._au), this._X._i.innerHTML = s; var n = e.getImageUrl ? e.getImageUrl() : ""; this._X._m.innerHTML = n ? gemOrgStr.DETAILS_VIEW_ID_IMAGE.replace("[src]", n) : gemOrgStr.DETAILS_VIEW_USER_LOGO, this._k(); var o = this.config.customize[e.id] && this.config.customize[e.id].theme ? gemOrgStr.themes[this.config.customize[e.id].theme].toolbarHeight : this.theme.toolbarHeight; this._X._t.style.top = "-9999px", this._X._t.style.left = "-9999px", this._X._u.style.top = o + "px", this._X._u.style.left = "0px", this._X._u.style.position = "relative", this._X._7.style.top = "-9999px", this._X._7.style.left = "-9999px", this._X._7.innerHTML = "", this._X._i.style.opacity = 0, this._X._m.style.opacity = 0, get._z(this._X._m, { opacity: 0 }, { opacity: 1 }, 400, get._z._aK), get._z(this._X._zR, { top: 0 }, { top: -o }, 200, get._z._aK), get._z(this._X._i, { opacity: 0 }, { opacity: 1 }, 200, get._z._at) }, gemOrgStr.prototype._k = function () { this._X._J(), this._X._N() && this._q(this._X._N(), "change", this._j) }, gemOrgStr.prototype._j = function (t, e) { for (var i = this._X._H(), r = this._X._N(), s = r.value, a = 0; a < r.options.length; a++) s == r.options[a].value && (r.options[a] = null); if (s) { var n = this._X._i.innerHTML, o = gemOrgStr.DETAILS_VIEW_INPUT_HTML.replace(/\[label]/g, s).replace("[value]", ""), h = n.indexOf('<select class="gem-oc-labels">'); this._X._i.innerHTML = n.substring(0, h) + o + n.substring(h, n.length); var l = this._X._J(), g = 1; for (a in i) l[g].value = i[a], g++; this._k() } }, gemOrgStr.prototype._zt = function (t, e) { if (this._S) { var i, r = this._X._U().value; this._X._M() && this._X._M().value && (i = this._X._M().value); var s = this._X._H(); this.updateNode(r, i, s), this._S = !1 } this.showMainView() }, gemOrgStr.prototype._zZ = function () { this.showGridView() }, gemOrgStr.prototype.showGridView = function () { var t = '<table cellpadding="0" cellspacing="0" border="0">'; for (t += "<tr>", t += "<th>ID</th><th>Parent ID</th>", i = 0; i < this._au.length; i++) t += "<th>" + (n = this._au[i]) + "</th>"; t += "</tr>"; for (var e in this.nodes) { var r = this.nodes[e], s = i % 2 == 0 ? "gem-even" : "gem-odd", a = r.data; for (t += '<tr class="' + s + '">', t += "<td>" + r.id + "</td>", t += "<td>" + r.pid + "</td>", j = 0; j < this._au.length; j++) { var n = this._au[j], o = a[n]; t += "<td>", t += o || "&nbsp;", t += "</td>" } t += "</tr>" } t += "</table>", this._X._7.innerHTML = t, this._X._t.style.top = "-9999px", this._X._t.style.left = "-9999px", this._X._u.style.top = "-9999px", this._X._u.style.left = "-9999px", this._X._7.style.top = this.theme.toolbarHeight + "px", this._X._7.style.left = "0px", get._z(this._X._7, { left: 100, opacity: 0 }, { left: 0, opacity: 1 }, 200, get._z._aM), get._z(this._X._zR, { top: 0 }, { top: 2 * -this.theme.toolbarHeight }, 200, get._z._aK) }, gemOrgStr.prototype._zW = function (t, e) { this.showMainView() }, gemOrgStr.prototype.showMainView = function () { this._X._t.style.top = this.theme.toolbarHeight + "px", this._X._t.style.left = "0px", this._X._u.style.top = "-9999px", this._X._u.style.left = "-9999px", this._X._7.style.top = "-9999px", this._X._7.style.left = "-9999px", this._X._7.innerHTML = "", 0 != this._X._zR.style.top && "" != this._X._zR.style.top && "0px" != this._X._zR.style.top && get._z(this._X._zR, { top: -46 }, { top: 0 }, 200, get._z._aK) }, gemOrgStr.prototype._zs = function (t, e) { this.print() }, gemOrgStr.prototype.print = function () { var t, e = this, i = this._X.element, r = this._X._zC, s = [], a = i.parentNode, n = r.style.display, o = document.body, h = o.childNodes; if (!e._ab) { for (e._ab = !0, t = 0; t < h.length; t++) { var l = h[t]; 1 === l.nodeType && (s[t] = l.style.display, l.style.display = "none") } r.style.display = "none", o.appendChild(i), window.focus(), window.print(), setTimeout(function () { for (a.appendChild(i), t = 0; t < h.length; t++) { var o = h[t]; 1 === o.nodeType && (o.style.display = s[t]) } r.style.display = n, e._ab = !1 }, 1e3) } }, gemOrgStr.prototype._zK = function () { this.zoom(!0, !0) }, gemOrgStr.prototype._zL = function () { this.zoom(!1, !0) }, gemOrgStr.prototype._zy = function (t, e) { this._zh = this._X._u.scrollTop + e[0].touches[0].pageY }, gemOrgStr.prototype._zb = function (t, e) { this._X._u.scrollTop = this._zh - e[0].touches[0].pageY }, gemOrgStr.prototype._zn = function (t, e) { this._X._n = void 0; var i = e[0].wheelDelta ? e[0].wheelDelta / 40 : e[0].detail ? -e[0].detail : 0; if (i) { var r = i > 0, s = gemOrgStr.util._aZ(this._X._v, e[0].pageX, e[0].pageY); this.zoom(r, !1, s) } return e[0].preventDefault() && !1 }, gemOrgStr.prototype._zd = function (t, e) { var i = this; window.setTimeout(function () { i.resize() }, 300) }, gemOrgStr.prototype._aQ = function (t, e) { function i() { get._z(l._X._zc, { right: 1, opacity: .8 }, { right: -30, opacity: 0 }, 500, get._z._as, function () { l._aX = null }), get._z(l._X._aj, { left: 1, opacity: .8 }, { left: -30, opacity: 0 }, 500, get._z._as, function () { l._aX = null }), get._z(l._X._zG, { top: 49, opacity: .8 }, { top: 19, opacity: 0 }, 500, get._z._as, function () { l._aX = null }), get._z(l._X._Q, { bottom: 1, opacity: .8 }, { bottom: -30, opacity: 0 }, 500, get._z._as, function () { l._aX = null }) } if (this._X._n = void 0, this._aO.dragStart) { this._X._t.style.cursor = "move"; var r = e[0].pageX - this._X._t.offsetLeft, s = e[0].pageY - this._X._t.offsetTop, a = gemOrgStr.util._5(this._X), n = a[2] / this._aP, o = a[3] / this._aL, h = n > o ? n : o; a[0] = -(r - this._aO.dragStart.x) * h + this._aO.dragStart.viewBoxLeft, a[1] = -(s - this._aO.dragStart.y) * h + this._aO.dragStart.viewBoxTop, a[0] = parseInt(a[0]), a[1] = parseInt(a[1]), this._X._v.setAttribute("viewBox", a.toString()) } if (this.config.enableMove) { var l = this; if (this._aX) return clearTimeout(this._aX), void (this._aX = setTimeout(i, 4e3)); get._z(l._X._zc, { right: -30, opacity: 0 }, { right: 1, opacity: .8 }, 500, get._z._as), get._z(l._X._aj, { left: -30, opacity: 0 }, { left: 1, opacity: .8 }, 500, get._z._as), get._z(l._X._zG, { top: 19, opacity: 0 }, { top: 49, opacity: .8 }, 500, get._z._as), get._z(l._X._Q, { bottom: -30, opacity: 0 }, { bottom: 1, opacity: .8 }, 500, get._z._as), this._aX = setTimeout(i, 4e3) } }, gemOrgStr.prototype._ap = function (t, e) { document.body.style.mozUserSelect = document.body.style.webkitUserSelect = document.body.style.userSelect = "none"; var i = gemOrgStr.util._5(this._X); this._aO.dragStart = { x: e[0].pageX - this._X._t.offsetLeft, y: e[0].pageY - this._X._t.offsetTop, viewBoxLeft: i[0], viewBoxTop: i[1] } }, gemOrgStr.prototype._aA = function (t, e) { this._aO.dragStart = null, this._X._t.style.cursor = "default" }, gemOrgStr.prototype.zoom = function (t, e, i) { if (this._zM) return !1; this._zM = !0; var r = this, s = gemOrgStr.util._5(this._X), a = s.slice(0), n = s[2], o = s[3]; !0 === t ? (s[2] = s[2] / (1.2 * gemOrgStr.S_FACTOR), s[3] = s[3] / (1.2 * gemOrgStr.S_FACTOR)) : !1 === t ? (s[2] = s[2] * (1.2 * gemOrgStr.S_FACTOR), s[3] = s[3] * (1.2 * gemOrgStr.S_FACTOR)) : (s[2] = s[2] / t, s[3] = s[3] / t), i || (i = [50, 50]), s[0] = a[0] - (s[2] - n) / (100 / i[0]), s[1] = a[1] - (s[3] - o) / (100 / i[1]); var h = this._aP / s[2], l = this._aL / s[3]; return this.scale = h > l ? l : h, this.scale < this.minScale && (this.scale = this.minScale, s[2] = this._aP / this.scale, s[3] = this._aL / this.scale, s[0] = a[0] - (s[2] - n) / (100 / i[0]), s[1] = a[1] - (s[3] - o) / (100 / i[1])), this.scale > this.maxScale && (this.scale = this.maxScale, s[2] = this._aP / this.scale, s[3] = this._aL / this.scale, s[0] = a[0] - (s[2] - n) / (100 / i[0]), s[1] = a[1] - (s[3] - o) / (100 / i[1])), e ? get._z(this._X._v, { viewBox: a }, { viewBox: s }, 300, get._z._aU, function () { r._zM = !1 }) : (this._X._v.setAttribute("viewBox", s.toString()), this._zM = !1), !1 }, gemOrgStr.prototype._aD = function (t, e) { if (t.className.indexOf("gem-disabled") > -1) return !1; var i = this; clearTimeout(this._zu.timer), this._zu.timer = setTimeout(function () { i._zu.currentIndex++, i._l(), i._aq() }, 100) }, gemOrgStr.prototype._za = function (t, e) { if (t.className.indexOf("gem-disabled") > -1) return !1; var i = this; clearTimeout(this._zu.timer), this._zu.timer = setTimeout(function () { i._zu.currentIndex--, i._l(), i._aq() }, 100) }, gemOrgStr.prototype._zm = function (t, e) { var i = this; clearTimeout(this._zu.timer), this._zu.timer = setTimeout(function () { i._zu.found = i._C(i._X._zj.value), i._zu.currentIndex = 0, i._l(), i._an(), i._aq() }, 500) }, gemOrgStr.prototype._zi = function (t, e) { var i = this; clearTimeout(this._zu.timer), this._zu.timer = setTimeout(function () { i._zu.currentIndex = 0, i._zu.found = i._C(i._X._zj.value), i._an(), i._l(), i._aq() }, 100) }, gemOrgStr.prototype._aq = function () { this._zu.found.length && this.highlightNode(this._zu.found[this._zu.currentIndex].node.id) }, gemOrgStr.prototype.highlightNode = function (t) { function e() { var e = i.nodes[t], r = (gemOrgStr.util._5(i._X), e.x - i.initialViewBoxMatrix[2] / 2 + e.w / 2), s = e.y - i.initialViewBoxMatrix[3] / 2 + e.h / 2; i.move([r, s, i.initialViewBoxMatrix[2], i.initialViewBoxMatrix[3]], null, function () { var r = i._X.getNodeById(t), s = gemOrgStr.util._3(r), a = s.slice(0); a[0] = gemOrgStr.HS_FACTOR, a[3] = gemOrgStr.HS_FACTOR, a[4] = a[4] - e.w / 2 * (gemOrgStr.HS_FACTOR - 1), a[5] = a[5] - e.h / 2 * (gemOrgStr.HS_FACTOR - 1), get._z(r, { transform: s }, { transform: a }, 200, get._z._at, function (t) { get._z(t[0], { transform: a }, { transform: s }, 200, get._z._aK, function () { }) }) }) } var i = this; this.isCollapsed(this.nodes[t]) ? this.expand(this.nodes[t].parent, e) : e() }, gemOrgStr.prototype._an = function (t) { }, gemOrgStr.prototype._l = function () { this._zu.currentIndex < this._zu.found.length - 1 && 0 != this._zu.found.length ? this._X._aE.className = this._X._aE.className.replace(" gem-disabled", "") : -1 == this._X._aE.className.indexOf(" gem-disabled") && (this._X._aE.className = this._X._aE.className + " gem-disabled"), 0 != this._zu.currentIndex && 0 != this._zu.found.length ? this._X._zq.className = this._X._zq.className.replace(" gem-disabled", "") : -1 == this._X._zq.className.indexOf(" gem-disabled") && (this._X._zq.className = this._X._zq.className + " gem-disabled") }, gemOrgStr.prototype._C = function (t) { var e = []; if ("" == t) return e; t.toLowerCase && (t = t.toLowerCase()); for (var i in this.nodes) { var r = this.nodes[i]; for (m in r.data) if (m != this.config.photoFields[0]) { var s = -1; if (gemOrgStr.util._ag(r) && gemOrgStr.util._ag(r.data[m]) && (s = r.data[m].toString().toLowerCase().indexOf(t)), s > -1) { e.push({ indexOf: s, node: r }); break } } } return e.sort(function (t, e) { return t.indexOf < e.indexOf ? -1 : t.indexOf > e.indexOf ? 1 : 0 }), e }, gemOrgStr.prototype._aT = function (t, e) { var i = t.getAttribute("data-node-id"), r = this.nodes[i], s = r.x + r.w - 15, a = r.x - 30, n = r.y - 30, o = r.y + r.h - 15; this.config.enableDetailsView && this._zl("details", s, n, i), this.config.enableEdit && (this._zl("add", s, o, i), this._zl("edit", a, n, i), this._zl("del", a, o, i)) }, gemOrgStr.prototype._zl = function (t, e, i, r) { var s = this._X.getButtonByType(t); s.style.display = "block", s.setAttribute("transform", "matrix(0.14,0,0,0.14," + e + "," + i + ")"), s.setAttribute("data-btn-id", r) }, gemOrgStr.prototype._aF = function (t, e) { var i = t.getAttribute("data-node-id"), r = this.nodes[i]; this._R("clickNodeEvent", { node: r }) }, gemOrgStr.prototype._aR = function (t, e) { e[0].preventDefault(); var i = t.getAttribute("data-btn-id"), r = t.getAttribute("data-btn-action"); "del" == r ? this.removeNode(i) : "add" == r ? this.insertNode(i) : "details" == r ? this.showDetailsView(i) : "edit" == r ? this.showEditView(i) : "expColl" == r && this.expandOrCollapse(i) }, gemOrgStr.prototype.showEditView = function (t) { this._S = !0, this.showDetailsView(t) }, gemOrgStr.prototype.expand = function (t, e) { t.collapsed = gemOrgStr.EXPANDED, t.parent == this._zr || null == t.parent ? this.loadFromJSON(this.nodes, !0, e) : this.expand(t.parent, e) }, gemOrgStr.prototype.expandOrCollapse = function (t) { var e = this, i = this.nodes[t]; this._aN = { id: t, old_x: i.x, old_y: i.y }, i.collapsed == gemOrgStr.EXPANDED ? i.collapsed = gemOrgStr.COLLAPSED : i.collapsed = gemOrgStr.EXPANDED, this.loadFromJSON(this.nodes, !0, function () { i.collapsed == gemOrgStr.EXPANDED && e.moveToMostDeepChildForNode(i), e._R("updatedEvent") }) }, gemOrgStr.prototype.moveToMostDeepChildForNode = function (t) { var e = gemOrgStr.util._5(this._X); t = t.getMDChild(this.nodes); var i = this.config.siblingSeparation / 2, r = this.config.levelSeparation / 2, s = e.slice(0); switch (this.config.orientation) { case gemOrgStr.C_TOP: case gemOrgStr.TP_LEFT: s[1] = t.y + t.h - e[3] + r, e[1] < s[1] && this.move(s); break; case gemOrgStr.C_BOTTOM: case gemOrgStr.BP_LEFT: s[1] = t.y - r, e[1] > s[1] && this.move(s); break; case gemOrgStr.C_RIGHT: case gemOrgStr.RP_TOP: s[0] = t.x - i, e[0] > s[0] && this.move(s); break; case gemOrgStr.C_LEFT: case gemOrgStr.LP_TOP: s[0] = t.x + t.w - e[2] + i, e[0] < s[0] && this.move(s) } }, gemOrgStr.prototype.insertNode = function (t, e, i) { var r = this, s = this.nodes[t]; this._aN = { id: t, old_x: s.x, old_y: s.y }, void 0 == i && (i = gemOrgStr.util._V(this.nodes)), (void 0 == e || null == e) && (e = {}, this.config.primaryFields.forEach(function (t) { e[t] = t })); var a = this._h(i, t, null, e, !1); return this._R("insertNodeEvent", { node: a }) ? (a.x = s.x, a.y = s.y, this.loadFromJSON(this.nodes, !0, function () { r.moveToMostDeepChildForNode(r.nodes[a.id]), r._R("updatedEvent") }), a) : void this.removeNode(a.id) }, gemOrgStr.prototype.removeNode = function (t) { var e = this; if (this._R("removeNodeEvent", { id: t })) { var i = this.nodes[t], r = i.parent; for (j = 0; j < i.children.length; j++) i.children[j].pid = r.id; var s = this._X.getNodeById(t); s.parentNode.removeChild(s), delete this.nodes[t], this.loadFromJSON(this.nodes, !0, function () { e._R("updatedEvent") }) } }, gemOrgStr.prototype.updateNode = function (t, e, i) { var r = this, s = this.nodes[t]; s.pid = e, s.data = i, this._R("updateNodeEvent", { node: s }) && this.loadFromJSON(this.nodes, !0, function () { r._R("updatedEvent") }) }, gemOrgStr.prototype._h = function (t, e, i, r, s, a) { var n = this.config.customize[t] && this.config.customize[t].theme ? gemOrgStr.themes[this.config.customize[t].theme] : this.theme; s = void 0 == s ? gemOrgStr.NOT_DEFINED : s; var o = new gemOrgStr.node(t, e, i, r, n.size, this.config.photoFields, s, a); if (!this._R("createNodeEvent", { node: o })) return null; this.nodes[t] ? (o._zU = this.nodes[t].x, o._zJ = this.nodes[t].y) : (o._zU = null, o._zJ = null), this.nodes[t] = o; for (label in o.data) gemOrgStr.util._s(this._au, label) || this._au.push(label); return o }, gemOrgStr.prototype.load = function () { var t = this.config.dataSource; t && (t.constructor && t.constructor.toString().indexOf("HTML") > -1 ? this.loadFromHTMLTable(t) : "string" == typeof t ? this.loadFromXML(t) : this.loadFromJSON(t)) }, gemOrgStr.prototype.loadFromJSON = function (t, e, i) { if (this._zv = 0, this._zf = 0, this._zr = new gemOrgStr.node(-1, null, null, null, 2, 2), e) for (var r in t) this.nodes[r] && !this.nodes[r].isVisible() && (this.nodes[r].x = this.nodes[r].parent.x, this.nodes[r].y = this.nodes[r].parent.y), this._h(r, t[r].pid, t[r].spid, t[r].data, t[r].collapsed, t[r].color); else { var s = Object.keys(t[0])[0], a = Object.keys(t[0])[1], n = null; this.config.idField && (s = this.config.idField), this.config.parentIdField && (a = this.config.parentIdField), this.config.secondParentIdField && (n = this.config.secondParentIdField); for (var o = 0; o < t.length; o++) { var r = t[o][s], h = t[o][a], l = null; delete t[o][s], delete t[o][a], null != n && (l = t[o][n], delete t[o][n]), this._h(r, h, l, t[o]) } } for (var r in this.nodes) { _ = this.nodes[r]; (c = this.nodes[_.pid]) || (c = this._zr), _.parent = c; u = c.children.length; if (c.children[u] = _, null != _.spid) { var g = this.nodes[_.spid]; _.secondParent = g; var d = g.secondChildren.length; g.secondChildren[d] = _ } } if (this.config.layout == gemOrgStr.H_RIGHT) for (var r in this.nodes) { var _ = this.nodes[r], c = this.nodes[_.pid], m = r; if (0 == _.children.length) for (z = c.children.length - 1; z >= 0; z--) { var p = c.children[z]; if (0 == p.children.length && p != this.nodes[m] && null == p.displayPid && null == p.displayChildren) { null == this.nodes[m].color && (this.nodes[m].color = gemOrgStr.util._1(this.config.color)), p.color = this.nodes[m].color, p.displayPid = m, p.displayParent = this.nodes[m], null == this.nodes[m].displayChildren && (this.nodes[m].displayChildren = []); var u = this.nodes[m].displayChildren.length; this.nodes[m].displayChildren[u] = p, m = p.id } } } this.draw(i) }, gemOrgStr.prototype.loadFromHTMLTable = function (t) { for (var e = t.rows[0], i = [], r = 1; r < t.rows.length; r++) { for (var s = t.rows[r], a = {}, n = 0; n < s.cells.length; n++) { var o = s.cells[n]; a[e.cells[n].innerHTML] = o.innerHTML } i.push(a) } this.loadFromJSON(i) }, gemOrgStr.prototype.loadFromXML = function (t) { var e = this, i = []; get._a._T(t, null, function (t) { e._ai = 0, e._am(t, null, !0, i), e.loadFromJSON(i) }, "xml") }, gemOrgStr.prototype.loadFromXMLDocument = function (t) { var e = [], i = gemOrgStr.util._zS(t); this._ai = 0, this._am(i, null, !0, e), this.loadFromJSON(e) }, gemOrgStr.prototype._am = function (t, e, i, r) { var s = this; if (1 == t.nodeType && t.attributes.length > 0) { var a = {}; s._ai++, a.id = s._ai, a.pid = e; for (var n = 0; n < t.attributes.length; n++) { var o = t.attributes.item(n); a[o.nodeName] = o.nodeValue } r.push(a), i && (i = !1) } if (t.hasChildNodes()) { i || (e = s._ai); for (var h = 0; h < t.childNodes.length; h++) { var l = t.childNodes.item(h); l.nodeName, 3 != l.nodeType && this._am(l, e, i, r) } } }, "undefined" == typeof get && (get = {}), get._a = {}, get._a._zN = function () { return window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP") }, get._a._zo = function (t, e, i, r, s, a) { var n = get._a._zN(); n.open(i, t, a), n.onreadystatechange = function () { if (get._c().msie || "xml" != r || 4 != n.readyState) if (get._c().msie && "xml" == r && 4 == n.readyState) try { var t = (new DOMParser).parseFromString(n.responseText, "text/xml"); e(t) } catch (i) { (t = new ActiveXObject("Microsoft.XMLDOM")).loadXML(n.responseText), e(t) } else 4 == n.readyState && e(n.responseText); else e(n.responseXML) }, "POST" == i && n.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), n.send(s) }, get._a._T = function (t, e, i, r, s) { var a = []; for (var n in e) a.push(encodeURIComponent(n) + "=" + encodeURIComponent(e[n])); get._a._zo(t + "?" + a.join("&"), i, "GET", r, null, s) }, get._a._a6 = function (t, e, i, r, s) { var a = []; for (var n in e) a.push(encodeURIComponent(n) + "=" + encodeURIComponent(e[n])); get._a._zo(t, i, "POST", r, a.join("&"), s) }, gemOrgStr.prototype._y = function (t, e) { var i = e[0]; if (i.preventDefault(), (new Date).getTime(), 1 == e[0].touches.length) { var r = gemOrgStr.util._5(this._X); this._aO.dragStart = { x: e[0].touches[0].pageX - this._X._t.offsetLeft, y: e[0].touches[0].pageY - this._X._t.offsetTop, viewBoxLeft: r[0], viewBoxTop: r[1] } } 2 == e[0].touches.length && (this._aO.dragStart = null, this._p = null, this._a2 = gemOrgStr.util._a1(this._X._v, i)) }, gemOrgStr.prototype._b = function (t, e) { if (e[0].preventDefault(), 1 == e[0].touches.length && (this._X._n = void 0, this._aO.dragStart)) { var i = e[0].touches[0].pageX - this._X._t.offsetLeft, r = e[0].touches[0].pageY - this._X._t.offsetTop; this._X._t.style.cursor = "move"; var s = gemOrgStr.util._5(this._X), a = s[2] / this._aP, n = s[3] / this._aL, o = a > n ? a : n; s[0] = -(i - this._aO.dragStart.x) * o + this._aO.dragStart.viewBoxLeft, s[1] = -(r - this._aO.dragStart.y) * o + this._aO.dragStart.viewBoxTop, s[0] = parseInt(s[0]), s[1] = parseInt(s[1]), this._X._v.setAttribute("viewBox", s.toString()) } if (2 == e[0].touches.length) { var h = gemOrgStr.util._a1(this._X._v, e[0]), l = 1 + (h - this._a2) / (this._a2 / 100) / 100, g = gemOrgStr.util._a3(this._X._v, e[0]); this.zoom(l, null, g), this._a2 = h } }, gemOrgStr.prototype._g = function (t, e) { e[0].preventDefault(), (new Date).getTime() }, gemOrgStr.prototype._aH = function (t, e) { var i = e[0]; i.preventDefault(), this._aF(t, e), this._aT(t, e); var r = (new Date).getTime(); if (null != this._aV) if (i.touches && i.touches.length && i.touches.length > 1) this._aV = null; else if (this.config.orgDblClick) { var s = r - this._aV.time; if (400 > s && s > 0) { this._aO.dragStart = null; var a = t.getAttribute("data-node-id"), n = this.nodes[a], o = gemOrgStr.util._5(this._X), h = o.slice(0); if (this._aV.viewBox && this._aV.id == a) this.move(this._aV.viewBox), this._aV = null; else { var l = (h = gemOrgStr.util._5(this._X))[2] / h[3]; h[2] = 1.5 * n.w, h[3] = h[2] / l, h[0] = n.x - n.w / 4, h[1] = n.y - h[3] / 2 + n.h / 2, this.move(h), this._aV.viewBox && (o = this._aV.viewBox), this._aV = { id: a, viewBox: o } } } this._aV && (this._aV.time = r) } else this._aV = null; else this._aV = { time: r } }, gemOrgStr.prototype._aY = function (t, e) { e[0].preventDefault() }, gemOrgStr.prototype._aB = function (t, e) { var i = e[0]; i.preventDefault(), i.touches && i.touches.length && 0 == i.touches.length && (this._aV = null) };
function bindOrgStructure() { calltoAjax(misApiUrl.fetchOrganizationStructure + "?parentId=0", "GET", "", function (e) { if (null != e && "" != e) { var t = document.getElementById("orgStructure"); new gemOrgStr(t, { theme: "gemOrgTheme", expandToLevel: 3, layout: gemOrgStr.H_RIGHT, enableDetailsView: !1, primaryFields: ["Name", "Designation"], photoFields: ["ImagePath"], dataSource: e, enableEdit: !1, orgRender: onRender }) } else misAlert("The data you have requested does not exist. Please try after some time or contact to MIS team for further assistance.", "Oops...", "info") }) } function onRender(e, t) { for (var r = 0; r < t.content.length; r++) -1 != t.content[r].indexOf("[reporters]") && (t.content[r] = t.content[r].replace("[reporters]", t.node.children.length), t.node.children.length > 0 ? t.content[r] = t.content[r].replace(/\[hasChild\]/gm, "block") : t.content[r] = t.content[r].replace(/\[hasChild\]/gm, "none")) } gemOrgStr.themes.gemOrgTheme = { size: [280, 300], toolbarHeight: 46, textPoints: [{ x: 135, y: 45, width: 270 }, { x: 135, y: 75, width: 270 }], txtPtNoImage: [{ x: 135, y: 45, width: 270 }, { x: 135, y: 75, width: 270 }], lnkRadius: 20, defs: '<filter id="f1" x="0" y="0" width="200%" height="200%"><feOffset result="offOut" in="SourceAlpha" dx="5" dy="5" /><feGaussianBlur result="blurOut" in="offOut" stdDeviation="5" /><feBlend in="SourceGraphic" in2="blurOut" mode="normal" /></filter>', box: '<rect x="0" y="0" height="300" width="270" rx="10" ry="10" class="gemOrgTheme-box" filter="url(#f1)"  />', text: '<text text-anchor="middle" width="[width]" class="gem-text gem-text-[index]" x="[x]" y="[y]">[text]</text>', image: '<clipPath id="gemOrgClip"><circle cx="140" cy="185" r="100" /></clipPath><image preserveAspectRatio="xMidYMid slice" clip-path="url(#gemOrgClip)" xlink:href="[href]" x="40" y="85" height="200" width="200"/>', reporters: '<circle cx="55" cy="120" r="20" class="reporters" display="[hasChild]"></circle><text class="reporters-text" display="[hasChild]" text-anchor="middle" width="100" x="55" y="125">[reporters]</text>' };