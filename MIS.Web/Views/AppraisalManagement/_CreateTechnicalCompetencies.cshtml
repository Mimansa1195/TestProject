<style>
    .select2-container--open {
        z-index: 9999;
    }
    .l-h-84 {
        line-height: 84px;
    }
    .p-0 {
        padding: 0;
    }
     
    @@media (min-width:320px) and (max-width:767px) {
        .l-h-84 {
            line-height: 0;
        }
        .p-0 {
            padding: 0 15px;
        }
        .font-p-11 {
            font-size: 11px;
        }
    }
</style>
<div id="divAssignParameterToForm">
    <div class="with-border m-t-0" style="font-size: 16px;">Form Name : <span id="spnFormName"></span></div>
    <hr style="margin: 1em 0;" />
    <div class="row">
        <div class="col-md-12 marginTop10" id="divCompetencyTypeEdit">
            <div class="row">
                <div class="form-group full-width col-sm-6 col-md-3 col-lg-3">
                    <select style="width: 100%;" id="ddlCompentencyTypeEdit" class="form-control select2 select2-hidden-accessible validation-required" aria-hidden="true" disabled>
                        <option value="2" selected>Technical</option>
                    </select>
                </div>
                <div class="form-group full-width col-sm-6 col-md-6 col-lg-6">
                    <div class="pull-left">
                        <div class="row">
                            <div class="col-md-2 col-xs-2">
                                <a id="btnAddNewEdit" data-toggle="modal" class="btn btn-primary"><i class="fa fa-plus"></i></a>
                            </div>
                            <div class="col-md-10 col-xs-10 p-0">
                                <p class="margin-bottom-0 font-p-11">Click here to add technical parameter.</p>
                                <p class="spnError margin-bottom-0 font-p-11"><i>To add multiple parameters repeat the [+] action.</i></p>
                            </div>
                        </div> 
                    </div>
                </div>
                <div class="form-group full-width col-sm-6 col-md-3 col-lg-3">
                    <div class="pull-right"><a id="btnAddParameter" data-toggle="modal" class="btn btn-primary">Add Parameter</a></div>
                </div>
            </div>
        </div>
        <div id="divParameterCombinationsEdit">

        </div>
    </div>
    <div class="row">
        <div class="modal-footer">
            <button id="btnUpdateForm" type="button" class="btn btn-success"><i class="fa fa-save"></i>&nbsp;Save As Draft</button>
            <button id="btnUpdateFinalizeForm" type="button" class="btn btn-gemini"><i class="fa fa-thumbs-up"></i>&nbsp;Finalize</button>
        </div>
    </div>
</div>


<script>
    var competencyList;
    $(function () {
        $("#ddlCompentencyTypeEdit").select2();
        setDataOnEditCall();
    });

    $("#btnAddParameter").click(function () {
        loadModal("popupAddParameter", "modalAddParameter", misAppUrl.addAppraisalParameterByEmployee, true);
    });

    $("#btnAddNewEdit").click(function () {
        if (!validateControls('divCompetencyTypeEdit')) {
            return false;
        }
        generateControlsEdit('divParameterCombinationsEdit');
    });

    function generateControlsForEdit(containerId, maxNoOfTextBoxes, minNoOfMandatoryTxtBoxes, competencyTypeId, parameterId, evaluationCriteria) {
        maxNoOfTextBoxes = maxNoOfTextBoxes || 5;
        if (containerId) {
            var txtCount = 0;
            var itemrow = $("#" + containerId + " .itemRow");
            if (itemrow && itemrow.length > 0) {
                var controlName = itemrow.last();
                txtCount = parseInt(controlName.closest('div').first().find('select')[0].id.replace("ddlCompetencyTypeEdit", "")) + 1;
            }
            if (txtCount < maxNoOfTextBoxes) {
                $("#" + containerId).append(getDynamicControls(txtCount, minNoOfMandatoryTxtBoxes || 1, ''));
            }
            else {
                misAlert("You can't add more than " + maxNoOfTextBoxes + " parameters!", 'Sorry', 'warning');
            }
            bindCompetencywithJason('#ddlCompetencyTypeEdit' + txtCount + '', competencyTypeId);
            GetParameterEdit('#ddlParameterEdit' + txtCount + '', competencyTypeId, parameterId)
            $('#txtEvaluationCriteriaEdit' + txtCount + '').val(evaluationCriteria);
        }
    }

    function generateControlsEdit(containerId, maxNoOfTextBoxes, minNoOfMandatoryTxtBoxes) {
        maxNoOfTextBoxes = maxNoOfTextBoxes || 5;
        if (containerId) {
            var txtCount = 0;
            var itemrow = $("#" + containerId + " .itemRow");
            if (itemrow && itemrow.length > 0) {
                var controlName = itemrow.last();
                txtCount = parseInt(controlName.closest('div').first().find('select')[0].id.replace("ddlCompetencyTypeEdit", "")) + 1;
            }
            if (txtCount < maxNoOfTextBoxes) {
                $("#" + containerId).append(getDynamicControls(txtCount, minNoOfMandatoryTxtBoxes || 1, ''));
            }
            else {
                misAlert("You can't add more than " + maxNoOfTextBoxes + " parameters!", 'Sorry', 'warning');
            }
            bindCompetencywithJason('#ddlCompetencyTypeEdit' + txtCount + '', $("#ddlCompentencyTypeEdit").val() || 0);
            GetParameterEdit('#ddlParameterEdit' + txtCount + '', $("#ddlCompentencyTypeEdit").val() || 0, 0);
        }
    }

    function getDynamicControls(idx, minNoOfMandatoryTxtBoxes, value) {
        return '<div class="col-md-12 itemRow">' +
               '<div class="row">' +
               '<div class="col-md-3" style="display:none"><div class="form-group"><label class="control-label">Competency Type<span class="spnError">*</span></label><div class="inputGroupContainer"><div class="input-group"><select class="form-control select-validate validation-required" id="ddlCompetencyTypeEdit' + idx + '" onchange="bindParameterEdit(' + idx + ')"></select></div></div></div></div>' +
               '<div class="col-md-4"><div class="form-group"><label class="control-label">Parameter<span class="spnError">*</span><a href="javascript:void(0)" title="Refresh" onclick="reloadDDL(this)"><i class="fa fa-refresh" aria-hidden="true"></i></a></label><div class="inputGroupContainer"><div class="input-group"><select class="form-control select2 validation-required" id="ddlParameterEdit' + idx + '"></select></div></div></div></div>' +
               '<div class="col-md-6"><div class="form-group"><label class="control-label">Evaluation Criteria</label><div class="inputGroupContainer"><div class="input-group"><textarea type="text" class="form-control" id="txtEvaluationCriteriaEdit' + idx + '"> </textarea></div></div></div></div>' +
               '<div class="col-md-2 text-right l-h-84"><span class="input-group-btn"><button class="btn btn-danger" style="background-color: #d2322d;" value="X" onclick="removeControlsEdit(this)">X</button></span></div>' +
               '</div></div>';
    }

    function removeControlsEdit(item) {
        $(item).closest('.itemRow').remove()
    }

    function reloadDDL(e) {
        try {
            var ddlId = $(e.parentNode).closest('div').find('select').attr('id');
            if (ddlId) {
                var competencyTypeId = 2;
                var selectedId = 0;
                GetParameterEdit(('#' + ddlId), competencyTypeId, selectedId);
            }
        } catch (e) {
        }
    }

    function setDataOnEditCall() {
        if ($("#hdnCompetencyFormId").val() > 0) {
            var jsonObject = {
                'competencyFormId': $("#hdnCompetencyFormId").val()
            };
            calltoAjax(misApiUrl.getCompetencyFormDataForEdit, "POST", jsonObject,
                function (result) {
                    if (result.CompetencyFormData != null) {
                        $("#spnFormName").html(result.CompetencyFormData.CompetencyFormName);
                        $("#hdnLocationId").val(result.CompetencyFormData.LocationId);
                        $("#hdnVerticalId").val(result.CompetencyFormData.VerticalId);
                        $("#hdnDivisionId").val(result.CompetencyFormData.DivisionId);
                        $("#hdnDepartmentId").val(result.CompetencyFormData.DepartmentId);
                        $("#hdnDesignationId").val(result.CompetencyFormData.DesignationId);
                    }
                    if (result.CompetencyAndParameterListBO.length > 0) {
                        var data = result.CompetencyAndParameterListBO;
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].CompetencyTypeId == 2)
                                generateControlsForEdit('divParameterCombinationsEdit', 0, 0, data[i].CompetencyTypeId, data[i].ParameterId, data[i].EvaluationCriteria)
                        }
                    }
                });
        }
    }

    function bindCompetencywithJason(controlId, selectedId) {
        $(controlId).empty();
        $(controlId).append("<option value = '2'>Technical</option>");
        $(controlId).val(selectedId);
    }

    function GetParameterEdit(controlId, competencyId, selectedId) {
        $(controlId).empty();
        $(controlId).select2();
        var jsonObject = { 'competencyId': competencyId };

        calltoAjax(misApiUrl.getParameter, "POST", jsonObject,
                function (result) {
                    if (result != null && result.length > 0) {
                        $(controlId).append("<option value = 0>Select</option>");
                        for (var x = 0; x < result.length; x++) {
                            $(controlId).append("<option value = '" + result[x].Value + "'>" + result[x].Text + "</option>");
                        }
                        if (selectedId > 0) {
                            $(controlId).val(selectedId);
                        }
                    }
                });
    }

    $("#btnUpdateForm").click(function () {
        if (!validateControls('divParameterCombinationsEdit')) {
            return false;
        }

        var jsonObject = {
            CompetencyFormId: $("#hdnCompetencyFormId").val(),
            LocationId: $("#hdnLocationId").val(),
            VerticalId: $("#hdnVerticalId").val(),
            DivisionId: $("#hdnDivisionId").val(),
            DepartmentId: $("#hdnDepartmentId").val(),
            DesignationId: $("#hdnDesignationId").val(),
            FormName: $("#spnFormName").html(),
            ParameterList: getFormDataEdit(),
            IsFinalize: false
        };

        if (jsonObject.ParameterList.length < 1) {
            return false;
        }

        calltoAjax(misApiUrl.addUpdateTechnicalCompetencyForm, "POST", jsonObject,
            function (result) {
                if (result.Status == 1) {
                    $("#addCompetencyForm").modal("hide");
                    misAlert("Form has been updated successfully.", "Success", "success");
                }
                if (result.Status == 2) {
                    misAlert("Form has already been created for designation <span color='red'>" + result.Result + "</span>", "Warning", "warning");
                }
                if (result.Status == 3) {
                    misAlert("Competency and parameter combinations are duplicate.", "Warning", "warning");
                }
            });

    });

    $("#btnUpdateFinalizeForm").click(function () {
        if (!validateControls('divParameterCombinationsEdit')) {
            return false;
        }
        var parameterList = getFormDataEdit();
        if (!parameterList || parameterList.length < 3) {
            misAlert("Please add at least 3 parameters, before finalizing the form.", "Warning", "warning");
            return false;
        }

        if (parameterList.length > 5) {
            misAlert("More than 5 parameters are not allowed.", "Warning", "warning");
            return false;
        }

        var reply = misConfirm("Are you sure, you want to finalize the form?", "Confirm", function (reply) {
            if (reply) {
                var jsonObject = {
                    CompetencyFormId: $("#hdnCompetencyFormId").val(),
                    LocationId: $("#hdnLocationId").val(),
                    VerticalId: $("#hdnVerticalId").val(),
                    DivisionId: $("#hdnDivisionId").val(),
                    DepartmentId: $("#hdnDepartmentId").val(),
                    DesignationId: $("#hdnDesignationId").val(),
                    FormName: $("#spnFormName").html(),
                    ParameterList: getFormDataEdit(),
                    IsFinalize: true
                };
                calltoAjax(misApiUrl.addUpdateTechnicalCompetencyForm, "POST", jsonObject,
                    function (result) {
                        if (result.Status == 1) {
                            $("#addCompetencyForm").modal("hide");
                            misAlert("Form has been created and finalized successfully.", "Success", "success");
                            $("#divAddTechnicalParamBtn").html('');
                            BindMyAppraisal();
                            $("#divParameterCombinationsEdit").html("");
                        }
                        if (result.Status == 2) {
                            misAlert("Form has been already created for designation <span color='red'>" + result.Result + "</span>", "Warning", "warning");
                        }
                        if (result.Status == 3) {
                            misAlert("Evaluation criteria and parameter combinations are duplicate.", "Warning", "warning");
                        }
                    });
            }
        });
    });

    function bindParameterEdit(idx) {
        var controlId = "#ddlParameterEdit" + idx;
        var competencyId = $("#ddlCompetencyTypeEdit" + idx).val();
        $(controlId).empty();
        var jsonObject = { 'competencyId': competencyId };
        calltoAjax(misApiUrl.getParameter, "POST", jsonObject,
                function (result) {
                    if (result != null && result.length > 0) {
                        $(controlId).append("<option value = 0>Select</option>");
                        for (var x = 0; x < result.length; x++) {
                            $(controlId).append("<option value = '" + result[x].Value + "'>" + result[x].Text + "</option>");
                        }
                    }
                });
    }

    function getFormDataEdit() {
        var i = 0;
        var collection = new Array();
        var items;
        $('#divParameterCombinationsEdit .itemRow').each(function (i, obj) {
            var id = parseInt($(obj).find('select')[0].id.replace("ddlCompetencyTypeEdit", ""));
            items = new Object();
            items.CompetencyTypeId = $("#ddlCompetencyTypeEdit" + id).val();
            items.ParameterId = $("#ddlParameterEdit" + id).val();
            items.EvaluationCriteria = $("#txtEvaluationCriteriaEdit" + id).val();
            items.SequenceNo = i;
            items.CompetencyFormDetailId = 0;// change on edit call
            collection.push(items);
        });
        return collection
    }

</script>